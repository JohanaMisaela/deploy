{"version":3,"file":"static/js/733.c6c2a773.js","mappings":"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","sources":["components/AppData/useAppConfig.js","components/hooks/usePlaylist.js","plugins/whiteboard/PusherCommunicationProvider.js","plugins/whiteboard/WhiteboardEvents.js","plugins/whiteboard/useMultiplayerState.js","plugins/whiteboard/Whiteboard.jsx","plugins/whiteboard/ToggleWhiteboard.jsx","components/FirstPersonDisplay.jsx","components/Playlist/PlaylistControls.jsx","components/ScreenshareTile.jsx","components/TileMenu.jsx","components/Pagination.jsx","components/VideoList.jsx","components/VideoTile.jsx","layouts/EmbedView.jsx","layouts/InsetView.jsx","layouts/NonPublisherView.jsx","components/AppData/useAppLayout.js","layouts/mainGridView.jsx","layouts/WaitingView.jsx","layouts/mainView.jsx","components/Playlist/PlaylistItem.jsx","components/Playlist/Playlist.jsx","components/Settings/StartRecording.jsx","components/StatsForNerds.jsx","components/MoreSettings/BulkRoleChangeModal.jsx","components/MoreSettings/ChangeNameModal.jsx","components/MoreSettings/ChangeSelfRole.jsx","components/MoreSettings/EmbedUrl.jsx","components/hooks/useFullscreen.js","components/MoreSettings/FullScreenItem.jsx","components/MoreSettings/MuteAllModal.jsx","components/MoreSettings/MoreSettings.jsx","components/PIP/pipUtils.js","components/PIP/PIPManager.js","components/PIP/SetupMediaSession.js","components/PIP/PIPComponent.jsx","components/PIP/index.jsx","components/ScreenShare.jsx","components/ScreenshareHintModal.jsx","components/Footer/ChatToggle.jsx","plugins/NoiseSuppression.js","components/Footer/ConferencingFooter.jsx","components/Footer/StreamingFooter.jsx","components/Footer.jsx","components/RoleChangeRequestModal.jsx","components/conference.jsx","components/Image.jsx","components/gridView.jsx","components/peerTileUtils.jsx","components/Playlist/VideoPlayer.jsx","components/ScreenshareDisplay.jsx","layouts/screenShareView.jsx"],"sourcesContent":["import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppConfig = (...path) => {\n  const appConfig = useHMSStore(\n    selectAppDataByPath(APP_DATA.appConfig, ...path)\n  );\n  return appConfig;\n};\n","import {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectVideoPlaylist,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const usePlaylist = type => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  const selection = useHMSStore(selector.selection);\n  const playlist = useHMSStore(selector.list);\n  const hmsActions = useHMSActions();\n  const playlistAction = isAudioPlaylist\n    ? hmsActions.audioPlaylist\n    : hmsActions.videoPlaylist;\n\n  return {\n    active,\n    hasNext: selection.hasNext,\n    hasPrevious: selection.hasPrevious,\n    actions: playlistAction,\n    list: playlist,\n  };\n};\n","// @ts-check\nimport Pusher from \"pusher-js\";\n\nconst stringifyWithNull = obj =>\n  JSON.stringify(obj, (k, v) => (v === undefined ? null : v));\n\n/**\n * On whiteboard close, owner sends current state to remote peers.\n * Remote peers tear down too quickly(unsubscribing listeners) and are unable to store the last state.\n *\n * Hack: To overcome this, attach 2 listeners:\n * one for storing the message(won't be unsubscribed),\n * one for calling the actual whiteboard callback(will be unsubscribed on whiteboard close)\n *\n * This way the last state is always received and stored\n */\n\n/**\n * Base class which can be extended to use various realtime communication services.\n * Methods to broadcast and subscribe to events.\n *\n * Stores the last message received/broadcasted to resend when required(when board is ready)\n */\n\nclass PusherCommunicationProvider {\n  constructor() {\n    /** @private */\n    this.initialized = false;\n    /** @private */\n    this.lastMessage = {};\n  }\n\n  init = (roomId = \"\") => {\n    if (this.initialized) {\n      return;\n    }\n\n    /** @private */\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      cluster: \"ap2\",\n      authEndpoint: process.env.REACT_APP_PUSHER_AUTHENDPOINT,\n    });\n\n    // Pusher.default.logToConsole = true;\n\n    /** @private */\n    this.channel = this.pusher.subscribe(`private-${roomId}`);\n\n    /**\n     * When events(peer-join) are sent too early before subscribing to a channel,\n     * resend last event after subscription has succeeded.\n     */\n    this.channel.bind(\"pusher:subscription_succeeded\", this.resendLastEvents);\n\n    console.log(\"Whiteboard initialized communication through Pusher\");\n    this.initialized = true;\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {any} message\n   */\n  storeEvent = (eventName, message) => {\n    this.lastMessage[eventName] = { eventName, ...message };\n  };\n\n  /**\n   * @param {string} eventName\n   * @returns {any}\n   */\n  getStoredEvent = eventName => {\n    return this.lastMessage[eventName];\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {Object} arg\n   */\n  broadcastEvent = (eventName, arg = {}) => {\n    this.storeEvent(eventName, arg);\n\n    this.channel?.trigger(\n      `client-${eventName}`,\n      stringifyWithNull({ eventName, ...arg })\n    );\n  };\n\n  /**\n   *\n   * @param {string} eventName\n   * @param {Function} cb\n   */\n  subscribe = (eventName, cb) => {\n    this.channel?.bind(`client-${eventName}`, message =>\n      this.storeEvent(eventName, message)\n    );\n    this.channel?.bind(`client-${eventName}`, cb);\n    return () => {\n      this.channel?.unbind(`client-${eventName}`, cb);\n    };\n  };\n\n  /** @private */\n  resendLastEvents = () => {\n    for (const eventName in this.lastMessage) {\n      if (this.lastMessage[eventName]) {\n        this.channel?.trigger(\n          `client-${eventName}`,\n          this.lastMessage[eventName]\n        );\n      }\n    }\n  };\n}\n\n/**\n * @type {PusherCommunicationProvider}\n */\nexport const provider = new PusherCommunicationProvider();\n","export const WhiteboardEvents = {\n  // To broadcast new changes made in whiteboard\n  STATE_CHANGE: \"state-change\",\n  // To broadcast the current whole state of the board by the owner\n  CURRENT_STATE: \"current-state\",\n  // For newly joined peers to request current state from owner\n  REQUEST_STATE: \"request-state\",\n};\n","// @ts-check\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { selectDidIJoinWithin, useHMSStore } from \"@100mslive/react-sdk\";\nimport { provider as room } from \"./PusherCommunicationProvider\";\nimport { WhiteboardEvents as Events } from \"./WhiteboardEvents\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\n\nconst useWhiteboardState = () => {\n  const { amIWhiteboardOwner } = useWhiteboardMetadata();\n  const shouldRequestState = useHMSStore(selectDidIJoinWithin(850));\n\n  return { shouldRequestState, amIWhiteboardOwner };\n};\n\n/**\n * Ref: https://github.com/tldraw/tldraw/blob/main/apps/www/hooks/useMultiplayerState.ts\n */\nexport function useMultiplayerState(roomId) {\n  const [app, setApp] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const { amIWhiteboardOwner, shouldRequestState } = useWhiteboardState();\n\n  /**\n   * Stores current state(shapes, bindings, [assets]) of the whiteboard\n   */\n  const rLiveShapes = useRef(new Map());\n  const rLiveBindings = useRef(new Map());\n\n  const getCurrentState = useCallback(() => {\n    return {\n      shapes: rLiveShapes.current\n        ? Object.fromEntries(rLiveShapes.current)\n        : {},\n      bindings: rLiveBindings.current\n        ? Object.fromEntries(rLiveBindings.current)\n        : {},\n    };\n  }, []);\n\n  const sendCurrentState = useCallback(() => {\n    if (amIWhiteboardOwner && isReady) {\n      room.broadcastEvent(Events.CURRENT_STATE, getCurrentState());\n    }\n  }, [amIWhiteboardOwner, isReady, getCurrentState]);\n\n  const updateLocalState = useCallback(({ shapes, bindings, merge = true }) => {\n    if (!(shapes && bindings)) return;\n\n    if (merge) {\n      const lShapes = rLiveShapes.current;\n      const lBindings = rLiveBindings.current;\n\n      if (!(lShapes && lBindings)) return;\n      Object.entries(shapes).forEach(([id, shape]) => {\n        if (!shape) {\n          lShapes.delete(id);\n        } else {\n          lShapes.set(shape.id, shape);\n        }\n      });\n\n      Object.entries(bindings).forEach(([id, binding]) => {\n        if (!binding) {\n          lBindings.delete(id);\n        } else {\n          lBindings.set(binding.id, binding);\n        }\n      });\n    } else {\n      rLiveShapes.current = new Map(Object.entries(shapes));\n      rLiveBindings.current = new Map(Object.entries(bindings));\n    }\n  }, []);\n\n  const applyStateToBoard = useCallback(\n    state => {\n      app === null || app === void 0\n        ? void 0\n        : app.replacePageContent(\n            state.shapes,\n            state.bindings,\n            {} // Object.fromEntries(lAssets.entries())\n          );\n    },\n    [app]\n  );\n\n  const handleChanges = useCallback(\n    state => {\n      if (!state) {\n        return;\n      }\n\n      const { shapes, bindings, eventName } = state;\n      updateLocalState({\n        shapes,\n        bindings,\n        merge: eventName === Events.STATE_CHANGE,\n      });\n      applyStateToBoard(getCurrentState());\n    },\n    [applyStateToBoard, getCurrentState, updateLocalState]\n  );\n\n  const setupInitialState = useCallback(() => {\n    if (!isReady) {\n      return;\n    }\n\n    if (amIWhiteboardOwner) {\n      // On board open, update the document with initial/stored content\n      handleChanges(room.getStoredEvent(Events.CURRENT_STATE));\n      // Send current state to other peers in the room currently\n      sendCurrentState();\n    } else if (shouldRequestState) {\n      /**\n       * Newly joined peers request the owner for current state\n       * and update their boards when they receive it\n       */\n      room.broadcastEvent(Events.REQUEST_STATE);\n    }\n  }, [\n    isReady,\n    amIWhiteboardOwner,\n    shouldRequestState,\n    handleChanges,\n    sendCurrentState,\n  ]);\n\n  // Callbacks --------------\n  // Put the state into the window, for debugging.\n  const onMount = useCallback(\n    app => {\n      app.loadRoom(roomId);\n      app.pause(); // Turn off the app's own undo / redo stack\n      // window.app = app;\n      setApp(app);\n    },\n    [roomId]\n  );\n\n  // Update the live shapes when the app's shapes change.\n  const onChangePage = useCallback(\n    (_app, shapes, bindings, _assets) => {\n      updateLocalState({ shapes, bindings });\n      room.broadcastEvent(Events.STATE_CHANGE, { shapes, bindings });\n\n      /**\n       * Tldraw thinks that the next update passed to replacePageContent after onChangePage is the own update triggered by onChangePage\n       * and the replacePageContent doesn't have any effect if it is a valid update from remote.\n       *\n       * To overcome this replacePageContent locally onChangePage(not costly - returns from first line).\n       *\n       * Refer: https://github.com/tldraw/tldraw/blob/main/packages/tldraw/src/state/TldrawApp.ts#L684\n       */\n      applyStateToBoard(getCurrentState());\n    },\n    [updateLocalState, applyStateToBoard, getCurrentState]\n  );\n\n  // Handle presence updates when the user's pointer / selection changes\n  // const onChangePresence = useCallback((app, user) => {\n  //   updateMyPresence({ id: app.room?.userId, user });\n  // }, [][updateMyPresence]);\n\n  // Subscriptions and initial setup\n  useEffect(() => {\n    if (!app) return;\n    const unsubs = [];\n\n    let stillAlive = true;\n\n    // Setup the document's storage and subscriptions\n    function setupDocument() {\n      // Subscribe to changes\n      if (stillAlive) {\n        unsubs.push(room.subscribe(Events.STATE_CHANGE, handleChanges));\n        unsubs.push(room.subscribe(Events.CURRENT_STATE, handleChanges));\n\n        // On request state(peer join), send whole current state to update the new peer's whiteboard\n        unsubs.push(room.subscribe(Events.REQUEST_STATE, sendCurrentState));\n\n        setIsReady(true);\n      }\n    }\n\n    room.init(roomId);\n    setupDocument();\n    setupInitialState();\n\n    return () => {\n      stillAlive = false;\n      unsubs.forEach(unsub => unsub());\n    };\n  }, [app, roomId, setupInitialState, sendCurrentState, handleChanges]);\n\n  useEffect(() => {\n    // Store last state on closing whitboard so that when the board is reopened the state could be fetched and reapplied\n    const handleUnmount = () => {\n      if (isReady && !shouldRequestState) {\n        console.log(\"Whiteboard unmount storing\", getCurrentState());\n        room.storeEvent(Events.CURRENT_STATE, getCurrentState());\n      }\n    };\n\n    return handleUnmount;\n  }, [isReady, shouldRequestState, getCurrentState]);\n\n  return { onMount, onChangePage };\n}\n","import React from \"react\";\nimport { Tldraw } from \"@tldraw/tldraw\";\nimport { useMultiplayerState } from \"./useMultiplayerState\";\nimport \"./Whiteboard.css\";\n\nexport const Whiteboard = React.memo(({ roomId }) => {\n  const events = useMultiplayerState(roomId);\n\n  return (\n    <Tldraw\n      autofocus\n      disableAssets={true}\n      showSponsorLink={false}\n      showPages={false}\n      showMenu={false}\n      {...events}\n    />\n  );\n});\n","import { selectLocalPeerRoleName, useHMSStore } from \"@100mslive/react-sdk\";\nimport { PencilDrawIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { useHLSViewerRole } from \"../../components/AppData/useUISettings\";\nimport { useIsFeatureEnabled } from \"../../components/hooks/useFeatures\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\nimport { FEATURE_LIST } from \"../../common/constants\";\n\nexport const ToggleWhiteboard = () => {\n  const {\n    whiteboardEnabled,\n    whiteboardOwner: whiteboardActive,\n    amIWhiteboardOwner,\n    toggleWhiteboard,\n  } = useWhiteboardMetadata();\n  const hlsViewerRole = useHLSViewerRole();\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const isFeatureEnabled = useIsFeatureEnabled(FEATURE_LIST.WHITEBOARD);\n\n  if (\n    !whiteboardEnabled ||\n    localPeerRole === hlsViewerRole ||\n    !isFeatureEnabled\n  ) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      title={`${\n        whiteboardActive\n          ? amIWhiteboardOwner\n            ? `Stop whiteboard`\n            : `Can't stop whiteboard`\n          : \"Start whiteboard\"\n      }`}\n      key=\"whiteboard\"\n    >\n      <IconButton\n        onClick={toggleWhiteboard}\n        active={!whiteboardActive}\n        disabled={whiteboardActive && !amIWhiteboardOwner}\n        data-testid=\"white_board_btn\"\n      >\n        <PencilDrawIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Box, Flex, Text } from \"@100mslive/react-ui\";\nimport PlaceholderBg from \"../images/first_person.png\";\n\nexport const FirstPersonDisplay = React.memo(() => {\n  return (\n    <Box\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        backgroundImage: `url(${PlaceholderBg})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        \"@md\": {\n          w: \"100%\",\n          maxWidth: \"unset\",\n        },\n      }}\n      data-testid=\"first_person_img\"\n    >\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          position: \"absolute\",\n          w: \"100%\",\n          top: \"33.33%\",\n          left: 0,\n          textAlign: \"center\",\n        }}\n      >\n        <Text color=\"white\" variant=\"h4\" css={{ \"@md\": { fontSize: \"$md\" } }}>\n          Welcome!\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$4\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          You’re the first one here.\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$2\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          Sit back and relax till the others join.\n        </Text>\n      </Flex>\n    </Box>\n  );\n});\n","import React from \"react\";\nimport {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectAudioTrackVolume,\n  selectPeerSharingVideoPlaylist,\n  selectVideoPlaylist,\n  selectVideoPlaylistAudioTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  NextIcon,\n  PauseIcon,\n  PlayIcon,\n  PlaylistIcon,\n  PrevIcon,\n  SpeakerIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, IconButton, Slider, Text } from \"@100mslive/react-ui\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\n\nconst Progress = ({ type, duration }) => {\n  const selectPlaylist =\n    type === HMSPlaylistType.audio ? selectAudioPlaylist : selectVideoPlaylist;\n  const progress = useHMSStore(selectPlaylist.progress);\n  const hmsActions = useHMSActions();\n  const playlistAction =\n    type === HMSPlaylistType.audio\n      ? hmsActions.audioPlaylist\n      : hmsActions.videoPlaylist;\n\n  if (!duration) {\n    return null;\n  }\n\n  return (\n    <Slider\n      step={1}\n      value={[progress]}\n      onValueChange={e => {\n        playlistAction.seekTo(e[0] * 0.01 * duration);\n      }}\n    />\n  );\n};\n\nexport const PlaylistActive = ({ type, onToggle }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box css={{ mt: \"$8\" }}>\n      <Flex justify=\"between\" css={{ w: \"100%\" }}>\n        <Box>\n          <Text variant=\"md\">{active.name}</Text>\n          {active.metadata?.description && (\n            <Text variant=\"xs\">{active.metadata?.description}</Text>\n          )}\n        </Box>\n        <IconButton\n          onClick={onToggle}\n          css={{ alignSelf: \"center\" }}\n          data-testid=\"playlist_collapse_btn\"\n        >\n          <PlaylistIcon />\n        </IconButton>\n      </Flex>\n    </Box>\n  );\n};\n\nconst Controls = ({ type, css = {} }) => {\n  const { active, hasNext, hasPrevious, actions } = usePlaylist(type);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Flex justify=\"center\" css={css}>\n      <IconButton\n        disabled={!hasPrevious}\n        onClick={() => {\n          actions.playPrevious();\n        }}\n        data-testid=\"playlist_prev_btn\"\n      >\n        <PrevIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          active.playing ? actions.pause() : actions.play(active.id);\n        }}\n        data-testid=\"playlist_play_pause_btn\"\n      >\n        {active.playing ? (\n          <PauseIcon width={32} height={32} />\n        ) : (\n          <PlayIcon width={32} height={32} />\n        )}\n      </IconButton>\n      <IconButton\n        disabled={!hasNext}\n        onClick={() => {\n          actions.playNext();\n        }}\n        data-testid=\"playlist_next_btn\"\n      >\n        <NextIcon />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst VolumeControl = () => {\n  const hmsActions = useHMSActions();\n  const volume = useHMSStore(selectVideoPlaylist.volume);\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const audioTrack = useHMSStore(\n    selectVideoPlaylistAudioTrackByPeerID(peerSharingPlaylist?.id)\n  );\n  const audioTrackVolume = useHMSStore(selectAudioTrackVolume(audioTrack?.id));\n  const sliderVolume = active ? volume : audioTrackVolume;\n\n  return (\n    <Flex align=\"center\" css={{ color: \"$white\" }}>\n      <SpeakerIcon />\n      <Slider\n        css={{ mx: \"$4\", w: \"$20\" }}\n        min={0}\n        max={100}\n        step={1}\n        value={[Math.floor(sliderVolume ?? 100)]}\n        onValueChange={e => {\n          const value = e[0];\n          if (active) {\n            hmsActions.videoPlaylist.setVolume(value);\n          } else if (audioTrack) {\n            hmsActions.setVolume(value, audioTrack.id);\n          }\n        }}\n        thumbStyles={{ w: \"$6\", h: \"$6\" }}\n      />\n    </Flex>\n  );\n};\n\nexport const AudioPlaylistControls = ({ onToggle }) => {\n  const { active } = usePlaylist(HMSPlaylistType.audio);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        borderTop: \"1px solid $borderLight\",\n        bg: \"$menuBg\",\n      }}\n    >\n      <Controls type={HMSPlaylistType.audio} />\n      <Progress type={HMSPlaylistType.audio} duration={active.duration} />\n      <PlaylistActive type={HMSPlaylistType.audio} onToggle={onToggle} />\n    </Box>\n  );\n};\n\nexport const VideoPlaylistControls = ({ children }) => {\n  const { active } = usePlaylist(HMSPlaylistType.video);\n\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        mt: \"-$24\",\n        w: \"100%\",\n        zIndex: 1,\n        \"@lg\": {\n          mt: 0,\n          p: \"$6\",\n        },\n      }}\n    >\n      {active && (\n        <Progress type={HMSPlaylistType.video} duration={active.duration} />\n      )}\n      <Flex align=\"center\" justify=\"between\">\n        <VolumeControl />\n        {active && <Controls css={{ flex: \"1 1 0\" }} />}\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { useFullscreen } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectLocalPeerID,\n  selectPeerByID,\n  selectScreenShareAudioByPeerID,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport { StyledVideoTile, Video, VideoTileStats } from \"@100mslive/react-ui\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport TileMenu from \"./TileMenu\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst labelStyles = {\n  position: \"unset\",\n  width: \"100%\",\n  textAlign: \"center\",\n  transform: \"none\",\n  mt: \"$2\",\n  flexShrink: 0,\n};\n\nconst Tile = ({ peerId, width = \"100%\", height = \"100%\" }) => {\n  const isLocal = useHMSStore(selectLocalPeerID) === peerId;\n  const track = useHMSStore(selectScreenShareByPeerID(peerId));\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const isHeadless = useIsHeadless();\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const label = getVideoTileLabel({\n    peerName: peer.name,\n    isLocal: false,\n    track,\n  });\n  const fullscreenRef = useRef(null);\n  // fullscreen is for desired state\n  const [fullscreen, setFullscreen] = useState(false);\n  // isFullscreen is for true state\n  const isFullscreen = useFullscreen(fullscreenRef, fullscreen, {\n    onClose: () => setFullscreen(false),\n  });\n  const isFullScreenSupported = screenfull.isEnabled;\n  const audioTrack = useHMSStore(selectScreenShareAudioByPeerID(peer?.id));\n  return (\n    <StyledVideoTile.Root\n      css={{ width, height }}\n      data-testid=\"screenshare_tile\"\n    >\n      {peer ? (\n        <StyledVideoTile.Container\n          transparentBg\n          ref={fullscreenRef}\n          css={{ flexDirection: \"column\" }}\n          onMouseEnter={() => setIsMouseHovered(true)}\n          onMouseLeave={() => {\n            setIsMouseHovered(false);\n          }}\n        >\n          {showStatsOnTiles ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n              isLocal={isLocal}\n            />\n          ) : null}\n          {isFullScreenSupported && !isHeadless ? (\n            <StyledVideoTile.FullScreenButton\n              onClick={() => setFullscreen(!fullscreen)}\n            >\n              {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n            </StyledVideoTile.FullScreenButton>\n          ) : null}\n          {track ? (\n            <Video\n              screenShare={true}\n              mirror={peer.isLocal && track?.source === \"regular\"}\n              attach={!isAudioOnly}\n              trackId={track.id}\n            />\n          ) : null}\n          <StyledVideoTile.Info css={labelStyles}>{label}</StyledVideoTile.Info>\n          {isMouseHovered && !isHeadless && !peer?.isLocal ? (\n            <TileMenu\n              isScreenshare\n              peerID={peer?.id}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst ScreenshareTile = React.memo(Tile);\n\nexport default ScreenshareTile;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  selectLocalPeerID,\n  selectPermissions,\n  selectSessionStore,\n  selectTemplateAppData,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport {\n  HorizontalMenuIcon,\n  MicOffIcon,\n  MicOnIcon,\n  PinIcon,\n  RemoveUserIcon,\n  ShareScreenIcon,\n  SpeakerIcon,\n  StarIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, Slider, StyledMenuTile, Text } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { useSetAppDataByKey } from \"./AppData/useUISettings\";\nimport { useDropdownList } from \"./hooks/useDropdownList\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { useIsFeatureEnabled } from \"./hooks/useFeatures\";\nimport {\n  APP_DATA,\n  FEATURE_LIST,\n  REMOTE_STOP_SCREENSHARE_TYPE,\n  SESSION_STORE_KEY,\n} from \"../common/constants\";\n\nconst isSameTile = ({ trackId, videoTrackID, audioTrackID }) =>\n  trackId &&\n  ((videoTrackID && videoTrackID === trackId) ||\n    (audioTrackID && audioTrackID === trackId));\n\nconst SpotlightActions = ({ audioTrackID, videoTrackID }) => {\n  const hmsActions = useHMSActions();\n  const spotlightTrackId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const isTileSpotlighted = isSameTile({\n    trackId: spotlightTrackId,\n    videoTrackID,\n    audioTrackID,\n  });\n\n  const setSpotlightTrackId = trackId =>\n    hmsActions.sessionStore\n      .set(SESSION_STORE_KEY.SPOTLIGHT, trackId)\n      .catch(err => ToastManager.addToast({ title: err.description }));\n\n  return (\n    <StyledMenuTile.ItemButton\n      onClick={() =>\n        isTileSpotlighted\n          ? setSpotlightTrackId()\n          : setSpotlightTrackId(videoTrackID || audioTrackID)\n      }\n    >\n      <StarIcon />\n      <span>\n        {isTileSpotlighted\n          ? \"Remove from Spotlight\"\n          : \"Spotlight Tile for everyone\"}\n      </span>\n    </StyledMenuTile.ItemButton>\n  );\n};\n\nconst PinActions = ({ audioTrackID, videoTrackID }) => {\n  const [pinnedTrackId, setPinnedTrackId] = useSetAppDataByKey(\n    APP_DATA.pinnedTrackId\n  );\n\n  const isTilePinned = isSameTile({\n    trackId: pinnedTrackId,\n    videoTrackID,\n    audioTrackID,\n  });\n\n  return (\n    <>\n      <StyledMenuTile.ItemButton\n        onClick={() =>\n          isTilePinned\n            ? setPinnedTrackId()\n            : setPinnedTrackId(videoTrackID || audioTrackID)\n        }\n      >\n        <PinIcon />\n        <span>{`${isTilePinned ? \"Unpin\" : \"Pin\"}`} Tile for myself</span>\n      </StyledMenuTile.ItemButton>\n    </>\n  );\n};\n\nconst showSpotlight = process.env.REACT_APP_ENV === \"qa\";\n\n/**\n * Taking peerID as peer won't necesarilly have tracks\n */\nconst TileMenu = ({\n  audioTrackID,\n  videoTrackID,\n  peerID,\n  isScreenshare = false,\n}) => {\n  const [open, setOpen] = useState(false);\n  const actions = useHMSActions();\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isLocal = localPeerID === peerID;\n  const { removeOthers } = useHMSStore(selectPermissions);\n  const {\n    isAudioEnabled,\n    isVideoEnabled,\n    setVolume,\n    toggleAudio,\n    toggleVideo,\n    volume,\n  } = useRemoteAVToggle(audioTrackID, videoTrackID);\n  const { sendEvent } = useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n  });\n\n  const isPrimaryVideoTrack =\n    useHMSStore(selectVideoTrackByPeerID(peerID))?.id === videoTrackID;\n  const uiMode = useHMSStore(selectTemplateAppData).uiMode;\n  const isInset = uiMode === \"inset\";\n\n  const isPinEnabled = useIsFeatureEnabled(FEATURE_LIST.PIN_TILE);\n  const showPinAction =\n    isPinEnabled &&\n    (audioTrackID || (videoTrackID && isPrimaryVideoTrack)) &&\n    !isInset;\n\n  const track = useHMSStore(selectTrackByID(videoTrackID));\n  const hideSimulcastLayers =\n    !track?.layerDefinitions?.length || track.degraded || !track.enabled;\n\n  useDropdownList({ open, name: \"TileMenu\" });\n\n  if (\n    !(\n      removeOthers ||\n      toggleAudio ||\n      toggleVideo ||\n      setVolume ||\n      showPinAction\n    ) &&\n    hideSimulcastLayers\n  ) {\n    return null;\n  }\n\n  if (isInset && isLocal) {\n    return null;\n  }\n\n  return (\n    <StyledMenuTile.Root open={open} onOpenChange={setOpen}>\n      <StyledMenuTile.Trigger\n        data-testid=\"participant_menu_btn\"\n        onClick={e => e.stopPropagation()}\n      >\n        <HorizontalMenuIcon />\n      </StyledMenuTile.Trigger>\n      <StyledMenuTile.Content side=\"top\" align=\"end\">\n        {isLocal ? (\n          showPinAction && (\n            <>\n              <PinActions\n                audioTrackID={audioTrackID}\n                videoTrackID={videoTrackID}\n              />\n              {showSpotlight && (\n                <SpotlightActions\n                  audioTrackID={audioTrackID}\n                  videoTrackID={videoTrackID}\n                />\n              )}\n            </>\n          )\n        ) : (\n          <>\n            {toggleVideo ? (\n              <StyledMenuTile.ItemButton\n                onClick={toggleVideo}\n                data-testid={\n                  isVideoEnabled\n                    ? \"mute_video_participant_btn\"\n                    : \"unmute_video_participant_btn\"\n                }\n              >\n                {isVideoEnabled ? <VideoOnIcon /> : <VideoOffIcon />}\n                <span>{`${isVideoEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n              </StyledMenuTile.ItemButton>\n            ) : null}\n            {toggleAudio ? (\n              <StyledMenuTile.ItemButton\n                onClick={toggleAudio}\n                data-testid={\n                  isVideoEnabled\n                    ? \"mute_audio_participant_btn\"\n                    : \"unmute_audio_participant_btn\"\n                }\n              >\n                {isAudioEnabled ? <MicOnIcon /> : <MicOffIcon />}\n                <span>{`${isAudioEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n              </StyledMenuTile.ItemButton>\n            ) : null}\n            {audioTrackID ? (\n              <StyledMenuTile.VolumeItem data-testid=\"participant_volume_slider\">\n                <Flex align=\"center\" gap={1}>\n                  <SpeakerIcon />\n                  <Box as=\"span\" css={{ ml: \"$4\" }}>\n                    Volume ({volume})\n                  </Box>\n                </Flex>\n                <Slider\n                  css={{ my: \"0.5rem\" }}\n                  step={5}\n                  value={[volume]}\n                  onValueChange={e => setVolume(e[0])}\n                />\n              </StyledMenuTile.VolumeItem>\n            ) : null}\n            {showPinAction && (\n              <>\n                <PinActions\n                  audioTrackID={audioTrackID}\n                  videoTrackID={videoTrackID}\n                />\n                {showSpotlight && (\n                  <SpotlightActions\n                    audioTrackID={audioTrackID}\n                    videoTrackID={videoTrackID}\n                  />\n                )}\n              </>\n            )}\n            <SimulcastLayers trackId={videoTrackID} />\n            {removeOthers ? (\n              <StyledMenuTile.RemoveItem\n                onClick={async () => {\n                  try {\n                    await actions.removePeer(peerID, \"\");\n                  } catch (error) {\n                    // TODO: Toast here\n                  }\n                }}\n                data-testid=\"remove_participant_btn\"\n              >\n                <RemoveUserIcon />\n                <span>Remove Participant</span>\n              </StyledMenuTile.RemoveItem>\n            ) : null}\n\n            {removeOthers && isScreenshare ? (\n              <StyledMenuTile.RemoveItem onClick={() => sendEvent({})}>\n                <ShareScreenIcon />\n                <span>Stop Screenshare</span>\n              </StyledMenuTile.RemoveItem>\n            ) : null}\n          </>\n        )}\n      </StyledMenuTile.Content>\n    </StyledMenuTile.Root>\n  );\n};\n\nconst SimulcastLayers = ({ trackId }) => {\n  const track = useHMSStore(selectTrackByID(trackId));\n  const actions = useHMSActions();\n  const bg = useDropdownSelection();\n  if (!track?.layerDefinitions?.length || track.degraded || !track.enabled) {\n    return null;\n  }\n  const currentLayer = track.layerDefinitions.find(\n    layer => layer.layer === track.layer\n  );\n  return (\n    <Fragment>\n      <StyledMenuTile.ItemButton\n        css={{ color: \"$textMedEmp\", cursor: \"default\" }}\n      >\n        Select maximum resolution\n      </StyledMenuTile.ItemButton>\n      {track.layerDefinitions.map(layer => {\n        return (\n          <StyledMenuTile.ItemButton\n            key={layer.layer}\n            onClick={async () => {\n              await actions.setPreferredLayer(trackId, layer.layer);\n            }}\n            css={{\n              justifyContent: \"space-between\",\n              bg: track.preferredLayer === layer.layer ? bg : undefined,\n              \"&:hover\": {\n                bg: track.preferredLayer === layer.layer ? bg : undefined,\n              },\n            }}\n          >\n            <Text\n              as=\"span\"\n              css={{\n                textTransform: \"capitalize\",\n                mr: \"$2\",\n                fontWeight:\n                  track.preferredLayer === layer.layer\n                    ? \"$semiBold\"\n                    : \"$regular\",\n              }}\n            >\n              {layer.layer}\n            </Text>\n            <Text as=\"span\" variant=\"xs\" css={{ color: \"$textMedEmp\" }}>\n              {layer.resolution.width}x{layer.resolution.height}\n            </Text>\n          </StyledMenuTile.ItemButton>\n        );\n      })}\n      <StyledMenuTile.ItemButton>\n        <Text as=\"span\" variant=\"xs\" css={{ color: \"$textMedEmp\" }}>\n          Currently streaming:\n          <Text\n            as=\"span\"\n            variant=\"xs\"\n            css={{\n              fontWeight: \"$semiBold\",\n              textTransform: \"capitalize\",\n              color: \"$textMedEmp\",\n              ml: \"$2\",\n            }}\n          >\n            {currentLayer ? (\n              <>\n                {track.layer} ({currentLayer.resolution.width}x\n                {currentLayer.resolution.height})\n              </>\n            ) : (\n              \"-\"\n            )}\n          </Text>\n        </Text>\n      </StyledMenuTile.ItemButton>\n    </Fragment>\n  );\n};\n\nexport default TileMenu;\n","import React from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { StyledPagination } from \"@100mslive/react-ui\";\n\nexport const Pagination = ({ page, setPage, numPages }) => {\n  const disableLeft = page === 0;\n  const disableRight = page === numPages - 1;\n  const nextPage = () => {\n    setPage(Math.min(page + 1, numPages - 1));\n  };\n  const prevPage = () => {\n    setPage(Math.max(page - 1, 0));\n  };\n  return (\n    <StyledPagination.Root>\n      <StyledPagination.Chevron disabled={disableLeft} onClick={prevPage}>\n        <ChevronLeftIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableLeft ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n      <StyledPagination.Dots>\n        {[...Array(numPages)].map((_, i) => (\n          <StyledPagination.Dot\n            key={i}\n            active={page === i}\n            onClick={() => setPage(i)}\n          />\n        ))}\n      </StyledPagination.Dots>\n      <StyledPagination.Chevron disabled={disableRight} onClick={nextPage}>\n        <ChevronRightIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableRight ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n    </StyledPagination.Root>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  selectLocalPeerID,\n  useHMSStore,\n  useVideoList,\n} from \"@100mslive/react-sdk\";\nimport { getLeft, StyledVideoList, useTheme } from \"@100mslive/react-ui\";\nimport { Pagination } from \"./Pagination\";\nimport ScreenshareTile from \"./ScreenshareTile\";\nimport VideoTile from \"./VideoTile\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst List = ({\n  maxTileCount,\n  peers,\n  maxColCount,\n  maxRowCount,\n  includeScreenShareForPeer,\n}) => {\n  const { aspectRatio } = useTheme();\n  const tileOffset = useAppConfig(\"headlessConfig\", \"tileOffset\");\n  const isHeadless = useIsHeadless();\n  const hideLocalVideo = useUISettings(UI_SETTINGS.hideLocalVideo);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  if (hideLocalVideo && peers.length > 1) {\n    peers = filterPeerId(peers, localPeerId);\n  }\n  const { ref, pagesWithTiles } = useVideoList({\n    peers,\n    maxTileCount,\n    maxColCount,\n    maxRowCount,\n    includeScreenShareForPeer,\n    aspectRatio,\n    offsetY: getOffset({ isHeadless, tileOffset }),\n  });\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    // currentPageIndex should not exceed pages length\n    if (page >= pagesWithTiles.length) {\n      setPage(0);\n    }\n  }, [pagesWithTiles.length, page]);\n  return (\n    <StyledVideoList.Root ref={ref}>\n      <StyledVideoList.Container>\n        {pagesWithTiles && pagesWithTiles.length > 0\n          ? pagesWithTiles.map((tiles, pageNo) => (\n              <StyledVideoList.View\n                key={pageNo}\n                css={{\n                  left: getLeft(pageNo, page),\n                  transition: \"left 0.3s ease-in-out\",\n                }}\n              >\n                {tiles.map(tile => {\n                  if (tile.width === 0 || tile.height === 0) {\n                    return null;\n                  }\n                  return tile.track?.source === \"screen\" ? (\n                    <ScreenshareTile\n                      key={tile.track.id}\n                      width={tile.width}\n                      height={tile.height}\n                      peerId={tile.peer.id}\n                    />\n                  ) : (\n                    <VideoTile\n                      key={tile.track?.id || tile.peer.id}\n                      width={tile.width}\n                      height={tile.height}\n                      peerId={tile.peer?.id}\n                      trackId={tile.track?.id}\n                      visible={pageNo === page}\n                    />\n                  );\n                })}\n              </StyledVideoList.View>\n            ))\n          : null}\n      </StyledVideoList.Container>\n      {!isHeadless && pagesWithTiles.length > 1 ? (\n        <Pagination\n          page={page}\n          setPage={setPage}\n          numPages={pagesWithTiles.length}\n        />\n      ) : null}\n    </StyledVideoList.Root>\n  );\n};\n\nconst VideoList = React.memo(List);\n\n/**\n * returns a new array of peers with the peer with peerId removed,\n * keeps the reference same if peer is not found\n */\nfunction filterPeerId(peers, peerId) {\n  const oldPeers = peers; // to keep the reference same if peer is not found\n  let foundPeerToFilterOut = false;\n  peers = [];\n  for (let i = 0; i < oldPeers.length; i++) {\n    if (oldPeers[i].id === peerId) {\n      foundPeerToFilterOut = true;\n    } else {\n      peers.push(oldPeers[i]);\n    }\n  }\n  if (!foundPeerToFilterOut) {\n    peers = oldPeers;\n  }\n  return peers;\n}\n\nconst getOffset = ({ tileOffset, isHeadless }) => {\n  if (!isHeadless || isNaN(Number(tileOffset))) {\n    return 32;\n  }\n  return Number(tileOffset);\n};\n\nexport default VideoList;\n","import React, { Fragment, useCallback, useMemo, useState } from \"react\";\nimport {\n  selectAudioTrackByPeerID,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  selectPeerNameByID,\n  selectVideoTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  HandRaiseFilledIcon,\n  MicOffIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Avatar,\n  StyledVideoTile,\n  useBorderAudioLevel,\n  Video,\n  VideoTileStats,\n} from \"@100mslive/react-ui\";\nimport TileConnection from \"./Connection/TileConnection\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport TileMenu from \"./TileMenu\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst Tile = ({\n  peerId,\n  trackId,\n  width,\n  height,\n  visible = true,\n  objectFit = \"cover\",\n  rootCSS = {},\n  containerCSS = {},\n}) => {\n  const trackSelector = trackId\n    ? selectVideoTrackByID(trackId)\n    : selectVideoTrackByPeerID(peerId);\n  const track = useHMSStore(trackSelector);\n  const peerName = useHMSStore(selectPeerNameByID(peerId));\n  const audioTrack = useHMSStore(selectAudioTrackByPeerID(peerId));\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const isHeadless = useIsHeadless();\n  const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n  const isVideoMuted = !track?.enabled;\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const borderAudioRef = useBorderAudioLevel(audioTrack?.id);\n  const isVideoDegraded = track?.degraded;\n  const isLocal = localPeerID === peerId;\n  const label = getVideoTileLabel({\n    peerName,\n    track,\n    isLocal,\n  });\n  const onHoverHandler = useCallback(event => {\n    setIsMouseHovered(event.type === \"mouseenter\");\n  }, []);\n  const headlessConfig = useAppConfig(\"headlessConfig\");\n  const hideLabel = isHeadless && headlessConfig?.hideTileName;\n  const isTileBigEnoughToShowStats = height >= 180 && width >= 180;\n  const avatarSize = useMemo(() => {\n    if (!width || !height) {\n      return undefined;\n    }\n    if (width <= 150 || height <= 150) {\n      return \"small\";\n    } else if (width <= 300 || height <= 300) {\n      return \"medium\";\n    }\n    return \"large\";\n  }, [width, height]);\n  return (\n    <StyledVideoTile.Root\n      css={{\n        width,\n        height,\n        padding: getPadding({\n          isHeadless,\n          tileOffset: headlessConfig?.tileOffset,\n          hideAudioLevel: headlessConfig?.hideAudioLevel,\n        }),\n        visibility: visible ? \"visible\" : \"hidden\",\n        ...rootCSS,\n      }}\n      data-testid={`participant_tile_${peerName}`}\n    >\n      {peerName !== undefined ? (\n        <StyledVideoTile.Container\n          onMouseEnter={onHoverHandler}\n          onMouseLeave={onHoverHandler}\n          ref={\n            isHeadless && headlessConfig?.hideAudioLevel\n              ? undefined\n              : borderAudioRef\n          }\n          noRadius={isHeadless && Number(headlessConfig?.tileOffset) === 0}\n          css={containerCSS}\n        >\n          {showStatsOnTiles && isTileBigEnoughToShowStats ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n              isLocal={isLocal}\n            />\n          ) : null}\n\n          {track ? (\n            <Video\n              trackId={track?.id}\n              attach={isLocal ? undefined : !isAudioOnly}\n              mirror={\n                mirrorLocalVideo &&\n                peerId === localPeerID &&\n                track?.source === \"regular\" &&\n                track?.facingMode !== \"environment\"\n              }\n              degraded={isVideoDegraded}\n              noRadius={isHeadless && Number(headlessConfig?.tileOffset) === 0}\n              data-testid=\"participant_video_tile\"\n              css={{\n                objectFit,\n              }}\n            />\n          ) : null}\n          {isVideoMuted || isVideoDegraded || (!isLocal && isAudioOnly) ? (\n            <StyledVideoTile.AvatarContainer>\n              <Avatar\n                name={peerName || \"\"}\n                data-testid=\"participant_avatar_icon\"\n                size={avatarSize}\n              />\n            </StyledVideoTile.AvatarContainer>\n          ) : null}\n\n          {showAudioMuted({\n            hideTileAudioMute: headlessConfig?.hideTileAudioMute,\n            isHeadless,\n            isAudioMuted,\n          }) ? (\n            <StyledVideoTile.AudioIndicator\n              data-testid=\"participant_audio_mute_icon\"\n              size={\n                width && height && (width < 180 || height < 180)\n                  ? \"small\"\n                  : \"medium\"\n              }\n            >\n              <MicOffIcon />\n            </StyledVideoTile.AudioIndicator>\n          ) : null}\n          {isMouseHovered && !isHeadless ? (\n            <TileMenu\n              peerID={peerId}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n          <PeerMetadata peerId={peerId} />\n          <TileConnection\n            hideLabel={hideLabel}\n            name={label}\n            isTile\n            peerId={peerId}\n            width={width}\n          />\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst metaStyles = { top: \"$4\", left: \"$4\" };\n\nconst PeerMetadata = ({ peerId }) => {\n  const metaData = useHMSStore(selectPeerMetadata(peerId));\n  const isHandRaised = metaData?.isHandRaised || false;\n  const isBRB = metaData?.isBRBOn || false;\n\n  return (\n    <Fragment>\n      {isHandRaised ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"raiseHand_icon_onTile\"\n        >\n          <HandRaiseFilledIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n      {isBRB ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"brb_icon_onTile\"\n        >\n          <BrbIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst VideoTile = React.memo(Tile);\n\nconst showAudioMuted = ({ hideTileAudioMute, isHeadless, isAudioMuted }) => {\n  if (!isHeadless) {\n    return isAudioMuted;\n  }\n  return isAudioMuted && !hideTileAudioMute;\n};\n\nconst getPadding = ({ isHeadless, tileOffset, hideAudioLevel }) => {\n  if (!isHeadless || isNaN(Number(tileOffset))) {\n    return undefined;\n  }\n  // Adding extra padding of 3px to ensure that the audio border is visible properly between tiles when tileOffset is 0.\n  return Number(tileOffset) === 0 ? (hideAudioLevel ? 0 : 3) : undefined;\n};\n\nexport default VideoTile;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  selectPeers,\n  throwErrorHandler,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"@100mslive/react-ui\";\nimport { GridSidePaneView } from \"../components/gridView\";\nimport { useSetAppDataByKey } from \"../components/AppData/useUISettings\";\nimport { APP_DATA } from \"../common/constants\";\n\nexport const EmbedView = ({ showStats }) => {\n  const peers = useHMSStore(selectPeers);\n\n  return (\n    <Flex css={{ size: \"100%\", \"@lg\": { flexDirection: \"column\" } }}>\n      <EmbedComponent />\n      <GridSidePaneView peers={peers} showStatsOnTiles={showStats} />\n    </Flex>\n  );\n};\n\nconst EmbedComponent = () => {\n  const { amIScreenSharing, toggleScreenShare } =\n    useScreenShare(throwErrorHandler);\n  const [embedConfig, setEmbedConfig] = useSetAppDataByKey(\n    APP_DATA.embedConfig\n  );\n  const [wasScreenShared, setWasScreenShared] = useState(false);\n  // to handle - https://github.com/facebook/react/issues/24502\n  const screenShareAttemptInProgress = useRef(false);\n  const src = embedConfig.url;\n  const iframeRef = useRef();\n\n  const resetEmbedConfig = useCallback(() => {\n    if (src) {\n      setEmbedConfig({ url: \"\" });\n    }\n  }, [src, setEmbedConfig]);\n\n  useEffect(() => {\n    if (\n      embedConfig.shareScreen &&\n      !amIScreenSharing &&\n      !wasScreenShared &&\n      !screenShareAttemptInProgress.current\n    ) {\n      screenShareAttemptInProgress.current = true;\n      // start screenshare on load for others in the room to see\n      toggleScreenShare({\n        forceCurrentTab: true,\n        cropElement: iframeRef.current,\n      })\n        .then(() => {\n          setWasScreenShared(true);\n        })\n        .catch(resetEmbedConfig)\n        .finally(() => {\n          screenShareAttemptInProgress.current = false;\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // reset embed when screenshare is closed from anywhere\n    if (wasScreenShared && !amIScreenSharing) {\n      resetEmbedConfig();\n    }\n    return () => {\n      // close screenshare when this component is being unmounted\n      if (wasScreenShared && amIScreenSharing) {\n        resetEmbedConfig();\n        toggleScreenShare(); // stop\n      }\n    };\n  }, [wasScreenShared, amIScreenSharing, resetEmbedConfig, toggleScreenShare]);\n\n  return (\n    <Box\n      ref={iframeRef}\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <iframe\n        src={src}\n        title={src}\n        style={{ width: \"100%\", height: \"100%\", border: 0 }}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture fullscreen\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </Box>\n  );\n};\n\nexport default EmbedView;\n","import React, { Fragment, useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectAppData,\n  selectLocalPeer,\n  selectRemotePeers,\n  selectRolesMap,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, config as cssConfig, Flex } from \"@100mslive/react-ui\";\nimport { FirstPersonDisplay } from \"../components/FirstPersonDisplay\";\nimport VideoTile from \"../components/VideoTile\";\nimport { useRolePreference } from \"../components/hooks/useFeatures\";\nimport { APP_DATA } from \"../common/constants\";\n\nconst getAspectRatio = ({ roleMap, roleName, isMobile }) => {\n  const role = roleMap[roleName];\n  const { width, height } = role.publishParams.video;\n  return isMobile ? height / width : width / height;\n};\n\nexport function InsetView() {\n  const remotePeers = useHMSStore(selectRemotePeers);\n  const localPeer = useHMSStore(selectLocalPeer);\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const roleMap = useHMSStore(selectRolesMap);\n  const rolePreference = useRolePreference();\n  let centerPeers = [];\n  let sidepanePeers = [];\n  if (rolePreference) {\n    const center = rolePreference[localPeer.roleName]?.split(\",\") || [];\n    for (const peer of remotePeers) {\n      if (center.includes(peer.roleName)) {\n        centerPeers.push(peer);\n      } else {\n        sidepanePeers.push(peer);\n      }\n    }\n    if (centerPeers.length === 0 && sidepanePeers.length > 0) {\n      centerPeers = sidepanePeers;\n      sidepanePeers = [];\n    }\n  } else {\n    centerPeers = remotePeers;\n  }\n  const hideInset = sidepanePeers.length > 0 && (isMobile || isLandscape);\n\n  return (\n    <Fragment>\n      <Box\n        css={{\n          display: \"grid\",\n          gridTemplateColumns: sidepanePeers.length > 0 ? \"3fr 1fr\" : \"100%\",\n          gridTemplateRows: \"1fr\",\n          gap: \"$8\",\n          px: \"$10\",\n          size: \"100%\",\n          \"@md\": {\n            gridTemplateColumns: \"1fr\",\n            gridTemplateRows: sidepanePeers.length > 0 ? `3fr 1fr` : \"100%\",\n          },\n        }}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            size: \"100%\",\n            gap: \"$8\",\n            flexWrap: \"wrap\",\n            placeContent: \"center\",\n            minHeight: 0,\n            minWidth: 0,\n            \"@lg\": { flexFlow: \"column\" },\n            \"@ls\": { flexFlow: \"row\" },\n          }}\n        >\n          {centerPeers.length > 0 ? (\n            centerPeers.map(peer => (\n              <VideoTile\n                key={peer.videoTrack || peer.id}\n                peerId={peer.id}\n                trackId={peer.videoTrack}\n                rootCSS={{\n                  aspectRatio: getAspectRatio({\n                    roleMap,\n                    roleName: peer.roleName,\n                    isMobile,\n                  }),\n                  padding: 0,\n                  height: \"100%\",\n                  maxWidth: \"100%\",\n                  minWidth: 0,\n                  minHeight: 0,\n                  flex: remotePeers.length === 1 ? undefined : \"1 1 0\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  \"@lg\": {\n                    display: \"block\",\n                    padding: \"0 !important\",\n                    width: \"100%\",\n                  },\n                }}\n                objectFit=\"contain\"\n              />\n            ))\n          ) : (\n            <FirstPersonDisplay />\n          )}\n        </Flex>\n        {sidepanePeers.length > 0 && (\n          <Flex\n            align=\"center\"\n            justify=\"center\"\n            css={{\n              size: \"100%\",\n              gap: \"$4\",\n              flexFlow: \"row wrap\",\n              placeContent: \"center\",\n            }}\n          >\n            {(hideInset ? [...sidepanePeers, localPeer] : sidepanePeers).map(\n              (peer, _, arr) => (\n                <VideoTile\n                  key={peer.videoTrack || peer.id}\n                  peerId={peer.id}\n                  trackId={peer.videoTrack}\n                  rootCSS={{\n                    aspectRatio: getAspectRatio({\n                      roleMap,\n                      roleName: peer.roleName,\n                      isMobile: false,\n                    }),\n                    flexBasis: \"100%\",\n                    \"@ls\": {\n                      aspectRatio: 1,\n                      flexBasis: \"calc(50% - $4)\",\n                    },\n                    \"@md\": {\n                      aspectRatio: 1,\n                      flexBasis:\n                        arr.length < 4 ? \"calc(50% - $4)\" : \"calc(33% - $4)\",\n                    },\n                    \"@sm\": {\n                      flexBasis:\n                        arr.length <= 4 ? \"calc(50% - $4)\" : \"calc(33% - $4)\",\n                    },\n                    padding: 0,\n                  }}\n                  objectFit=\"contain\"\n                />\n              )\n            )}\n          </Flex>\n        )}\n      </Box>\n      {!hideInset && (\n        <InsetTile\n          roleMap={roleMap}\n          isMobile={isMobile}\n          isLandscape={isLandscape}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nconst InsetTile = ({ isMobile, roleMap, isLandscape }) => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const aspectRatio = getAspectRatio({\n    roleMap,\n    roleName: localPeer.roleName,\n    isMobile,\n  });\n  let height = 180;\n  let width = height * aspectRatio;\n  if (isLandscape && width > 240) {\n    width = 240;\n    height = width / aspectRatio;\n  }\n  const nodeRef = useRef(null);\n\n  useEffect(() => {\n    if (!nodeRef.current || !window.ResizeObserver) {\n      return;\n    }\n    const node = nodeRef.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.target === node.parentElement) {\n          // reset to original position on resize\n          node.style.transform = `translate(0,0)`;\n        }\n      });\n    });\n    resizeObserver.observe(node.parentElement);\n    return () => {\n      node?.parentElement && resizeObserver?.unobserve(node.parentElement);\n      resizeObserver?.disconnect();\n    };\n  }, []);\n\n  return (\n    <Draggable bounds=\"parent\" nodeRef={nodeRef}>\n      <Box\n        ref={nodeRef}\n        css={{\n          position: \"absolute\",\n          bottom: 0,\n          right: sidepane ? \"$100\" : \"$10\",\n          mr: sidepane ? \"$14\" : 0,\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,0.3)\",\n          zIndex: 10,\n          aspectRatio: aspectRatio,\n          h: height,\n        }}\n      >\n        <VideoTile\n          peerId={localPeer.id}\n          trackid={localPeer.videoTrack}\n          rootCSS={{\n            size: \"100%\",\n            padding: 0,\n          }}\n          containerCSS={{\n            bg: \"$surfaceDefault\",\n          }}\n          width={width}\n          height={height}\n        />\n      </Box>\n    </Draggable>\n  );\n};\n","import React from \"react\";\nimport { ShieldAlertIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex, Text } from \"@100mslive/react-ui\";\n\nexport const NonPublisherView = React.memo(({ message }) => {\n  return (\n    <Box\n      css={{\n        overflow: \"hidden\",\n        w: \"96%\",\n        maxWidth: \"96%\",\n        h: \"100%\",\n        m: \"auto\",\n        background: \"$surfaceDefault\",\n        borderRadius: \"$3\",\n      }}\n      data-testid=\"non_publisher_view\"\n    >\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          w: \"$96\",\n          textAlign: \"center\",\n          margin: \"auto\",\n          h: \"100%\",\n          justifyContent: \"center\",\n          gap: \"$8\",\n        }}\n      >\n        <ShieldAlertIcon color=\"#C3D0E5\" width=\"80px\" height=\"80px\" />\n        <Flex\n          direction=\"column\"\n          css={{\n            w: \"$80\",\n            p: \"$1\",\n            gap: \"$4\",\n          }}\n        >\n          <Text color=\"white\" variant=\"h6\" css={{ \"@md\": { fontSize: \"$md\" } }}>\n            {message}\n          </Text>\n          <Text\n            color=\"$textMedEmp\"\n            css={{ mt: \"$4\", \"@md\": { fontSize: \"$sm\" } }}\n          >\n            Please go to dashboard and reconfigure role settings or contact the\n            role admin.\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n});\n","import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppLayout = path => {\n  return useHMSStore(selectAppDataByPath(APP_DATA.appLayout, path));\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRole,\n  selectPeers,\n  selectPeersByRoles,\n  selectRolesMap,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { GridCenterView, GridSidePaneView } from \"../components/gridView\";\nimport { NonPublisherView } from \"./NonPublisherView\";\nimport { useAppLayout } from \"../components/AppData/useAppLayout\";\nimport { useUISettings } from \"../components/AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const MainGridView = () => {\n  const centerRoles = useAppLayout(\"center\") || [];\n  const sidepaneRoles = useAppLayout(\"sidepane\") || [];\n  const maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  const peers = useHMSStore(selectPeers);\n  const roles = useHMSStore(selectRolesMap);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const centerPeers = peers.filter(peer => centerRoles.includes(peer.roleName));\n  const sidebarPeers = peers.filter(peer =>\n    sidepaneRoles.includes(peer.roleName)\n  );\n  const localRole = useHMSStore(selectLocalPeerRole);\n  const peersByRoles = useHMSStore(\n    selectPeersByRoles(localRole.subscribeParams.subscribeToRoles || [])\n  );\n  const [placeholder, setPlaceholder] = useState(\"\");\n\n  useEffect(() => {\n    const hasPublishingPeers = peers.some(peer => {\n      // peer able to publish\n      if (peer.roleName && roles[peer.roleName]) {\n        return !!roles[peer.roleName].publishParams?.allowed.length;\n      }\n      return true;\n    });\n    const hasSubscribedRolePublishing = peersByRoles.some(peer => {\n      if (peer.roleName && roles[peer.roleName]) {\n        return !!roles[peer.roleName].publishParams?.allowed.length;\n      }\n      return true;\n    });\n    if (!hasPublishingPeers) {\n      setPlaceholder(\"None of the roles can publish video, audio or screen\");\n    } else if (!localRole.subscribeParams.subscribeToRoles?.length) {\n      setPlaceholder(\"This role isn't subscribed to any role\");\n    } else if (!hasSubscribedRolePublishing) {\n      setPlaceholder(\"This role subscribed to roles is not publishing\");\n    } else {\n      setPlaceholder(\"\");\n    }\n  }, [\n    localRole.subscribeParams.subscribeToRoles?.length,\n    peers,\n    peersByRoles,\n    roles,\n  ]);\n  /**\n   * If there are peers from many publishing roles, then it's possible to divide\n   * them into two parts, those who show in center and those who show in sidepane.\n   * In case there is only one person in the room, then too sidepane will be shown\n   * and center would be taken up by a banner image.\n   * There is an issue currently, where the banner is still shown if there are\n   * multiple viewers in the room but no publisher. Depending on the use case\n   * this can be useful(for webinar) or look odd(for showing you're the only one).\n   * Note that both center peers and sidebar peers have only publishing peers in them.\n   */\n  let showSidePane = centerPeers.length > 0 && sidebarPeers.length > 0;\n  if (centerPeers.length === 0) {\n    // we'll show the sidepane for banner in this case too if 1). it's only me\n    // in the room. or 2). noone is publishing in the room\n    const itsOnlyMeInTheRoom =\n      peers.length === 1 && peers[0].id === localPeerId;\n    const nooneIsPublishing = sidebarPeers.length === 0;\n    showSidePane = itsOnlyMeInTheRoom || nooneIsPublishing;\n  }\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={{\n        \"@initial\": \"row\",\n        \"@md\": \"column\",\n      }}\n    >\n      {placeholder ? (\n        <NonPublisherView message={placeholder} />\n      ) : (\n        <>\n          <GridCenterView\n            peers={showSidePane ? centerPeers : peers}\n            maxTileCount={maxTileCount}\n            allowRemoteMute={false}\n            hideSidePane={!showSidePane}\n            totalPeers={peers.length}\n          />\n          {showSidePane && (\n            <GridSidePaneView peers={sidebarPeers} totalPeers={peers.length} />\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { ColoredTimeIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex, Text } from \"@100mslive/react-ui\";\n\nexport const WaitingView = React.memo(() => {\n  return (\n    <Box\n      css={{\n        overflow: \"hidden\",\n        w: \"96%\",\n        maxWidth: \"96%\",\n        h: \"100%\",\n        m: \"auto\",\n        background: \"$surfaceDefault\",\n        borderRadius: \"$3\",\n      }}\n      data-testid=\"waiting_view\"\n    >\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          w: \"$96\",\n          textAlign: \"center\",\n          margin: \"auto\",\n          h: \"100%\",\n          justifyContent: \"center\",\n          gap: \"$8\",\n        }}\n      >\n        <ColoredTimeIcon width=\"80px\" height=\"80px\" />\n        <Flex\n          direction=\"column\"\n          css={{\n            w: \"$80\",\n            p: \"$1\",\n            gap: \"$4\",\n          }}\n        >\n          <Text color=\"white\" variant=\"h6\" css={{ \"@md\": { fontSize: \"$md\" } }}>\n            Please wait\n          </Text>\n          <Text\n            color=\"$textMedEmp\"\n            css={{ mt: \"$4\", \"@md\": { fontSize: \"$sm\" } }}\n          >\n            Sit back and relax till others let you join.\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n});\n","import React, { Suspense, useEffect } from \"react\";\nimport {\n  selectIsConnectedToRoom,\n  selectLocalPeerRoleName,\n  selectPeerScreenSharing,\n  selectPeerSharingAudio,\n  selectPeerSharingVideoPlaylist,\n  selectTemplateAppData,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport FullPageProgress from \"../components/FullPageProgress\";\nimport EmbedView from \"./EmbedView\";\nimport { InsetView } from \"./InsetView\";\nimport { MainGridView } from \"./mainGridView\";\nimport ScreenShareView from \"./screenShareView\";\nimport SidePane from \"./SidePane\";\nimport { WaitingView } from \"./WaitingView\";\nimport { useWhiteboardMetadata } from \"../plugins/whiteboard\";\nimport { useAppConfig } from \"../components/AppData/useAppConfig\";\nimport {\n  useHLSViewerRole,\n  useIsHeadless,\n  usePinnedTrack,\n  useUISettings,\n  useUrlToEmbed,\n  useWaitingViewerRole,\n} from \"../components/AppData/useUISettings\";\nimport { SESSION_STORE_KEY, UI_MODE_ACTIVE_SPEAKER } from \"../common/constants\";\n\nconst WhiteboardView = React.lazy(() => import(\"./WhiteboardView\"));\nconst HLSView = React.lazy(() => import(\"./HLSView\"));\nconst ActiveSpeakerView = React.lazy(() => import(\"./ActiveSpeakerView\"));\nconst PinnedTrackView = React.lazy(() => import(\"./PinnedTrackView\"));\n\nexport const ConferenceMainView = () => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const pinnedTrack = usePinnedTrack();\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const peerSharingAudio = useHMSStore(selectPeerSharingAudio);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const { whiteboardOwner: whiteboardShared } = useWhiteboardMetadata();\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const uiMode = useHMSStore(selectTemplateAppData).uiMode;\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const headlessUIMode = useAppConfig(\"headlessConfig\", \"uiMode\");\n  const { uiViewMode, isAudioOnly } = useUISettings();\n  const hlsViewerRole = useHLSViewerRole();\n  const waitingViewerRole = useWaitingViewerRole();\n  const urlToIframe = useUrlToEmbed();\n  useEffect(() => {\n    if (!isConnected) {\n      return;\n    }\n    const audioPlaylist = JSON.parse(\n      process.env.REACT_APP_AUDIO_PLAYLIST || \"[]\"\n    );\n    const videoPlaylist = JSON.parse(\n      process.env.REACT_APP_VIDEO_PLAYLIST || \"[]\"\n    );\n    if (videoPlaylist.length > 0) {\n      hmsActions.videoPlaylist.setList(videoPlaylist);\n    }\n    if (audioPlaylist.length > 0) {\n      hmsActions.audioPlaylist.setList(audioPlaylist);\n    }\n\n    hmsActions.sessionStore.observe([\n      SESSION_STORE_KEY.PINNED_MESSAGE,\n      SESSION_STORE_KEY.SPOTLIGHT,\n    ]);\n  }, [isConnected, hmsActions]);\n\n  if (!localPeerRole) {\n    // we don't know the role yet to decide how to render UI\n    return null;\n  }\n\n  let ViewComponent;\n  if (localPeerRole === hlsViewerRole) {\n    ViewComponent = HLSView;\n  } else if (localPeerRole === waitingViewerRole) {\n    ViewComponent = WaitingView;\n  } else if (urlToIframe) {\n    ViewComponent = EmbedView;\n  } else if (whiteboardShared) {\n    ViewComponent = WhiteboardView;\n  } else if (uiMode === \"inset\") {\n    ViewComponent = InsetView;\n  } else if (\n    ((peerSharing && peerSharing.id !== peerSharingAudio?.id) ||\n      peerSharingPlaylist) &&\n    !isAudioOnly\n  ) {\n    ViewComponent = ScreenShareView;\n  } else if (pinnedTrack) {\n    ViewComponent = PinnedTrackView;\n  } else if (\n    uiViewMode === UI_MODE_ACTIVE_SPEAKER ||\n    (isHeadless && headlessUIMode === UI_MODE_ACTIVE_SPEAKER)\n  ) {\n    ViewComponent = ActiveSpeakerView;\n  } else {\n    ViewComponent = MainGridView;\n  }\n\n  return (\n    <Suspense fallback={<FullPageProgress />}>\n      <Flex\n        css={{\n          size: \"100%\",\n          position: \"relative\",\n        }}\n      >\n        <ViewComponent />\n        <SidePane />\n      </Flex>\n    </Suspense>\n  );\n};\n","import React from \"react\";\nimport { Dropdown, Flex, Text } from \"@100mslive/react-ui\";\n\nfunction formatDuration(duration) {\n  if (!duration) {\n    return \"\";\n  }\n  let mins = Math.floor(duration / 60);\n  if (mins < 10) {\n    mins = `0${String(mins)}`;\n  }\n  let secs = Math.floor(duration % 60);\n  if (secs < 10) {\n    secs = `0${String(secs)}`;\n  }\n\n  return `${mins}:${secs}`;\n}\n\nexport const PlaylistItem = React.memo(\n  ({ name, metadata, duration, selected, onClick }) => {\n    return (\n      <Dropdown.Item\n        css={{\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n          h: \"$18\",\n          p: \"$8\",\n          \"&:hover\": {\n            cursor: \"pointer\",\n            bg: \"$menuBg\",\n          },\n          \"&:focus-visible\": {\n            bg: \"$menuBg\",\n          },\n        }}\n        onClick={onClick}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"between\"\n          css={{ width: \"100%\", minHeight: 0 }}\n        >\n          <Text\n            variant=\"md\"\n            css={{ color: selected ? \"$brandDefault\" : \"$textPrimary\" }}\n          >\n            {name}\n          </Text>\n          <Text variant=\"xs\">{formatDuration(duration)}</Text>\n        </Flex>\n        {metadata?.description && (\n          <Text variant=\"xs\" css={{ mt: \"$4\" }}>\n            {metadata?.description}\n          </Text>\n        )}\n      </Dropdown.Item>\n    );\n  }\n);\n","import React, { Fragment, useState } from \"react\";\nimport {\n  HMSPlaylistType,\n  selectIsAllowedToPublish,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AudioPlayerIcon,\n  CrossIcon,\n  VideoPlayerIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Dropdown, Flex, Text, Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { AudioPlaylistControls } from \"./PlaylistControls\";\nimport { PlaylistItem } from \"./PlaylistItem\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\nimport { FEATURE_LIST } from \"../../common/constants\";\n\nconst BrowseAndPlayFromLocal = ({ type, actions }) => {\n  return (\n    <Fragment>\n      <Text\n        as=\"label\"\n        htmlFor={`${type}PlaylistBrowse`}\n        variant=\"sm\"\n        css={{ cursor: \"pointer\", mr: \"$2\" }}\n      >\n        Browse\n      </Text>\n      <input\n        type=\"file\"\n        id={`${type}PlaylistBrowse`}\n        accept={type === HMSPlaylistType.audio ? \"audio/*\" : \"video/*\"}\n        onChange={e => {\n          const file = e.target.files[0];\n          const id = file.lastModified;\n          actions.setList([\n            {\n              type,\n              id,\n              name: file.name,\n              url: URL.createObjectURL(file),\n            },\n          ]);\n          actions.play(id);\n        }}\n        style={{ display: \"none\" }}\n      />\n    </Fragment>\n  );\n};\n\nexport const Playlist = ({ type }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const { active, list: playlist, actions } = usePlaylist(type);\n  const [open, setOpen] = useState(false);\n  const [collapse, setCollapse] = useState(false);\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isFeatureEnabled = useIsFeatureEnabled(\n    isAudioPlaylist ? FEATURE_LIST.AUDIO_PLAYLIST : FEATURE_LIST.VIDEO_PLAYLIST\n  );\n  if (\n    !isAllowedToPublish.screen ||\n    playlist.length === 0 ||\n    !isFeatureEnabled\n  ) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <Dropdown.Trigger\n          asChild\n          data-testid={\n            type === HMSPlaylistType.audio ? \"audio_playlist\" : \"video_playlist\"\n          }\n        >\n          <IconButton active={!active}>\n            <Tooltip\n              title={isAudioPlaylist ? \"Audio Playlist\" : \"Video Playlist\"}\n            >\n              <Box>\n                {isAudioPlaylist ? <AudioPlayerIcon /> : <VideoPlayerIcon />}\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{\n            maxHeight: \"unset\",\n            width: \"$60\",\n            p: \"$0\",\n            bg: \"$bgSecondary\",\n            border: \"1px solid $menuBg\",\n          }}\n        >\n          <Flex\n            align=\"center\"\n            css={{\n              p: \"$4 $8\",\n              borderBottom: \"1px solid $borderLight\",\n              bg: \"$menuBg\",\n            }}\n          >\n            <Text variant=\"md\" css={{ flex: \"1 1 0\" }}>\n              {isAudioPlaylist ? \"Audio Player\" : \"Video Playlist\"}\n            </Text>\n            <BrowseAndPlayFromLocal type={type} actions={actions} />\n            <IconButton\n              css={{ mr: \"-$4\" }}\n              onClick={async () => {\n                if (active) {\n                  await actions.stop();\n                }\n                setOpen(false);\n                setCollapse(false);\n              }}\n            >\n              <CrossIcon width={24} height={24} />\n            </IconButton>\n          </Flex>\n          {!collapse && (\n            <Box css={{ maxHeight: \"$96\", overflowY: \"auto\" }}>\n              {playlist.map(playlistItem => {\n                return (\n                  <PlaylistItem\n                    key={playlistItem.id}\n                    {...playlistItem}\n                    onClick={async e => {\n                      e.preventDefault();\n                      try {\n                        await actions.play(playlistItem.id);\n                      } catch (e) {\n                        // error in playlist, stop or play next\n                      }\n                      // Close the dropdown list for videoplaylist\n                      if (!isAudioPlaylist) {\n                        setOpen(false);\n                      }\n                    }}\n                  />\n                );\n              })}\n            </Box>\n          )}\n          {isAudioPlaylist && (\n            <AudioPlaylistControls\n              onToggle={() => setCollapse(value => !value)}\n            />\n          )}\n        </Dropdown.Content>\n      </Dropdown.Root>\n    </Fragment>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  selectAppData,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Flex, Text } from \"@100mslive/react-ui\";\nimport { ResolutionInput } from \"../Streaming/ResolutionInput\";\nimport { getResolution } from \"../Streaming/RTMPStreaming\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport {\n  APP_DATA,\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n} from \"../../common/constants\";\n\nconst StartRecording = ({ open, onOpenChange }) => {\n  const permissions = useHMSStore(selectPermissions);\n  const recordingUrl = useHMSStore(selectAppData(APP_DATA.recordingUrl));\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n\n  const [recordingStarted, setRecordingState] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Dialog.Root open={open} onOpenChange={onOpenChange}>\n        <Dialog.Portal>\n          <Dialog.Content\n            css={{\n              width: \"min(400px,80%)\",\n              p: \"$10\",\n              bg: \"#201617\",\n            }}\n          >\n            <Dialog.Title>\n              <Flex gap={2} css={{ c: \"$error\" }}>\n                <AlertTriangleIcon />\n                <Text css={{ c: \"inherit\" }} variant=\"h6\">\n                  End Recording\n                </Text>\n              </Flex>\n            </Dialog.Title>\n            <Text variant=\"sm\" css={{ c: \"$textMedEmp\", my: \"$8\" }}>\n              Are you sure you want to end recording? You can’t undo this\n              action.\n            </Text>\n            <Flex justify=\"end\" css={{ mt: \"$12\" }}>\n              <Dialog.Close asChild>\n                <Button\n                  outlined\n                  css={{ borderColor: \"$secondaryLight\", mr: \"$4\" }}\n                >\n                  Don't end\n                </Button>\n              </Dialog.Close>\n              <Button\n                data-testid=\"stop_recording_confirm_mobile\"\n                variant=\"danger\"\n                icon\n                onClick={async () => {\n                  try {\n                    await hmsActions.stopRTMPAndRecording();\n                  } catch (error) {\n                    ToastManager.addToast({\n                      title: error.message,\n                      variant: \"error\",\n                    });\n                  }\n                  onOpenChange(false);\n                }}\n              >\n                End recording\n              </Button>\n            </Flex>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    );\n  }\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title>\n          <Text variant=\"h6\">Start Recording</Text>\n        </Dialog.Title>\n        <ResolutionInput\n          testId=\"recording_resolution_mobile\"\n          css={{ flexDirection: \"column\", alignItems: \"start\" }}\n          onResolutionChange={setResolution}\n        />\n        <Button\n          data-testid=\"start_recording_confirm_mobile\"\n          variant=\"primary\"\n          icon\n          css={{ ml: \"auto\" }}\n          type=\"submit\"\n          disabled={recordingStarted || isStreamingOn}\n          onClick={async () => {\n            try {\n              setRecordingState(true);\n              await hmsActions.startRTMPOrRecording({\n                meetingURL: recordingUrl,\n                resolution: getResolution(resolution),\n                record: true,\n              });\n            } catch (error) {\n              if (error.message.includes(\"stream already running\")) {\n                ToastManager.addToast({\n                  title: \"Recording already running\",\n                  variant: \"error\",\n                });\n              } else {\n                ToastManager.addToast({\n                  title: error.message,\n                  variant: \"error\",\n                });\n              }\n              setRecordingState(false);\n            }\n            onOpenChange(false);\n          }}\n        >\n          Start\n        </Button>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n\nexport default StartRecording;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  selectHMSStats,\n  selectLocalPeerID,\n  selectPeersMap,\n  selectTracksMap,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  Box,\n  Dialog,\n  Dropdown,\n  Flex,\n  HorizontalDivider,\n  Label,\n  Switch,\n  Text,\n} from \"@100mslive/react-ui\";\nimport { DialogDropdownTrigger } from \"../primitives/DropdownTrigger\";\nimport { useSetUiSettings } from \"./AppData/useUISettings\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const StatsForNerds = ({ onOpenChange }) => {\n  const tracksWithLabels = useTracksWithLabel();\n  const statsOptions = useMemo(\n    () => [\n      { id: \"local-peer\", label: \"Local Peer Stats\" },\n      ...tracksWithLabels,\n    ],\n    [tracksWithLabels]\n  );\n  const [selectedStat, setSelectedStat] = useState(statsOptions[0]);\n  const [showStatsOnTiles, setShowStatsOnTiles] = useSetUiSettings(\n    UI_SETTINGS.showStatsOnTiles\n  );\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectionBg = useDropdownSelection();\n\n  useEffect(() => {\n    if (\n      selectedStat.id !== \"local-peer\" &&\n      !tracksWithLabels.find(track => track.id === selectedStat.id)\n    ) {\n      setSelectedStat(\"local-peer\");\n    }\n  }, [tracksWithLabels, selectedStat]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            width: \"min(500px, 95%)\",\n            maxHeight: \"100%\",\n            overflowY: \"auto\",\n          }}\n        >\n          {/* Title */}\n          <Dialog.Title css={{ p: \"$4 0\" }}>\n            <Flex justify=\"between\">\n              <Flex align=\"center\" css={{ mb: \"$1\" }}>\n                <Text variant=\"h6\" inline>\n                  Stats For Nerds\n                </Text>\n              </Flex>\n              <Dialog.DefaultClose data-testid=\"stats_dialog_close_icon\" />\n            </Flex>\n          </Dialog.Title>\n          <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n          {/* Switch */}\n          <Flex justify=\"start\" gap={4} css={{ m: \"$10 0\" }}>\n            <Switch\n              checked={showStatsOnTiles}\n              onCheckedChange={setShowStatsOnTiles}\n            />\n            <Text variant=\"body2\" css={{ fontWeight: \"$semiBold\" }}>\n              Show Stats on Tiles\n            </Text>\n          </Flex>\n          {/* Select */}\n          <Flex\n            direction=\"column\"\n            css={{\n              mb: \"$12\",\n              position: \"relative\",\n              minWidth: 0,\n            }}\n          >\n            <Label variant=\"body2\">Stats For</Label>\n            <Dropdown.Root\n              data-testid=\"dialog_select_Stats For\"\n              open={open}\n              onOpenChange={setOpen}\n            >\n              <DialogDropdownTrigger\n                title={selectedStat.label || \"Select Stats\"}\n                css={{ mt: \"$4\" }}\n                titleCSS={{ mx: 0 }}\n                open={open}\n                ref={ref}\n              />\n              <Dropdown.Portal>\n                <Dropdown.Content\n                  align=\"start\"\n                  sideOffset={8}\n                  css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n                >\n                  {statsOptions.map(option => {\n                    const isSelected =\n                      option.id === selectedStat.id &&\n                      option.layer === selectedStat.layer;\n                    return (\n                      <Dropdown.Item\n                        key={`${option.id}-${option.layer || \"\"}`}\n                        onClick={() => {\n                          setSelectedStat(option);\n                        }}\n                        css={{\n                          px: \"$9\",\n                          bg: isSelected ? selectionBg : undefined,\n                          c: isSelected ? \"$white\" : \"$textPrimary\",\n                        }}\n                      >\n                        {option.label}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Content>\n              </Dropdown.Portal>\n            </Dropdown.Root>\n          </Flex>\n          {/* Stats */}\n          {selectedStat.id === \"local-peer\" ? (\n            <LocalPeerStats />\n          ) : (\n            <TrackStats\n              trackID={selectedStat.id}\n              layer={selectedStat.layer}\n              local={selectedStat.local}\n            />\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst useTracksWithLabel = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const peersMap = useHMSStore(selectPeersMap);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const tracksWithLabels = useMemo(\n    () =>\n      Object.values(tracksMap).reduce((res, track) => {\n        const peerName = peersMap[track.peerId]?.name;\n        const isLocalTrack = track.peerId === localPeerID;\n        if (isLocalTrack && track.layerDefinitions?.length) {\n          res = res.concat(\n            track.layerDefinitions.map(({ layer }) => {\n              return {\n                id: track.id,\n                layer,\n                local: true,\n                label: `${peerName} ${track.source} ${track.type} - ${layer}`,\n              };\n            })\n          );\n          return res;\n        }\n        res.push({\n          id: track.id,\n          local: isLocalTrack,\n          label: `${peerName} ${track.source} ${track.type}`,\n        });\n        return res;\n      }, []),\n    [tracksMap, peersMap, localPeerID]\n  );\n  return tracksWithLabels;\n};\n\nconst LocalPeerStats = () => {\n  const stats = useHMSStatsStore(selectHMSStats.localPeerStats);\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Packets Lost\" value={stats.subscribe?.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.subscribe?.jitter} />\n      <StatsRow\n        label=\"Publish Bitrate\"\n        value={formatBytes(stats.publish?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Subscribe Bitrate\"\n        value={formatBytes(stats.subscribe?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Available Outgoing Bitrate\"\n        value={formatBytes(stats.publish?.availableOutgoingBitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Total Bytes Sent\"\n        value={formatBytes(stats.publish?.bytesSent)}\n      />\n      <StatsRow\n        label=\"Total Bytes Received\"\n        value={formatBytes(stats.subscribe?.bytesReceived)}\n      />\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={`${\n          (\n            ((stats.publish?.currentRoundTripTime || 0) +\n              (stats.subscribe?.currentRoundTripTime || 0)) /\n            2\n          ).toFixed(3) * 1000\n        } ms`}\n      />\n    </Flex>\n  );\n};\n\nconst TrackStats = ({ trackID, layer, local }) => {\n  const selector = layer\n    ? selectHMSStats.localVideoTrackStatsByLayer(layer)(trackID)\n    : local\n    ? selectHMSStats.localAudioTrackStatsByID(trackID)\n    : selectHMSStats.trackStatsByID(trackID);\n  const stats = useHMSStatsStore(selector);\n  if (!stats) {\n    return null;\n  }\n  const inbound = stats.type.includes(\"inbound\");\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Type\" value={stats.type + \" \" + stats.kind} />\n      <StatsRow label=\"Bitrate\" value={formatBytes(stats.bitrate, \"b/s\")} />\n      <StatsRow label=\"Packets Lost\" value={stats.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.jitter?.toFixed(3)} />\n      <StatsRow\n        label={inbound ? \"Bytes Received\" : \"Bytes Sent\"}\n        value={formatBytes(inbound ? stats.bytesReceived : stats.bytesSent)}\n      />\n      {stats.kind === \"video\" && (\n        <>\n          <StatsRow label=\"Framerate\" value={stats.framesPerSecond} />\n          {!inbound && (\n            <StatsRow\n              label=\"Quality Limitation Reason\"\n              value={stats.qualityLimitationReason}\n            />\n          )}\n        </>\n      )}\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={stats.roundTripTime ? `${stats.roundTripTime * 1000} ms` : \"-\"}\n      />\n    </Flex>\n  );\n};\n\nconst StatsRow = React.memo(({ label, value }) => (\n  <Box css={{ bg: \"$surfaceLight\", w: \"calc(50% - $6)\", p: \"$8\", r: \"$3\" }}>\n    <Text\n      variant=\"overline\"\n      css={{\n        fontWeight: \"$semiBold\",\n        color: \"$textMedEmp\",\n        textTransform: \"uppercase\",\n      }}\n    >\n      {label}{\" \"}\n    </Text>\n    <Text\n      variant=\"sub1\"\n      css={{ fontWeight: \"$semiBold\", color: \"$textHighEmp\" }}\n    >\n      {value || \"-\"}\n    </Text>\n  </Box>\n));\n\nconst formatBytes = (bytes, unit = \"B\", decimals = 2) => {\n  if (bytes === undefined) return \"-\";\n  if (bytes === 0) return \"0 \" + unit;\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(\n    size => size + unit\n  );\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n};\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  ChangeRoleIcon,\n  CheckIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Dropdown,\n  Flex,\n  Loading,\n  Text,\n} from \"@100mslive/react-ui\";\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\nimport { DialogDropdownTrigger } from \"../../primitives/DropdownTrigger\";\nimport { useFilteredRoles } from \"../../common/hooks\";\n\nexport const BulkRoleChangeModal = ({ onOpenChange }) => {\n  const roles = useFilteredRoles();\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const roleRef = useRef(null);\n  const [selectedBulkRole, setBulkRole] = useState([]);\n  const [selectedRole, setRole] = useState(\"\");\n  const [bulkRoleDialog, setBulkRoleDialog] = useState(false);\n  const [roleDialog, setRoleDialog] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSubmiting, setIsSubmiting] = useState(false);\n\n  const changeBulkRole = useCallback(async () => {\n    if (selectedBulkRole.length > 0 && selectedRole) {\n      try {\n        setIsSubmiting(true);\n        await hmsActions.changeRoleOfPeersWithRoles(\n          selectedBulkRole,\n          selectedRole\n        );\n        setIsSubmiting(false);\n        setErrorMessage(\"\");\n        onOpenChange(false);\n      } catch (err) {\n        setErrorMessage(err?.message ? err?.message : \"Unknown error\");\n        setIsSubmiting(false);\n      }\n    }\n  }, [selectedBulkRole, selectedRole, hmsActions, onOpenChange]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Bulk Role Change\" Icon={ChangeRoleIcon}>\n        <DialogRow>\n          <Text>For Roles: </Text>\n          <Dropdown.Root\n            open={bulkRoleDialog}\n            onOpenChange={value => {\n              if (value) {\n                setBulkRoleDialog(value);\n              }\n            }}\n            modal={false}\n          >\n            <DialogDropdownTrigger\n              ref={ref}\n              title={\n                selectedBulkRole.length === 0\n                  ? \"Select Multiple Roles\"\n                  : selectedBulkRole.toString()\n              }\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={bulkRoleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n              onInteractOutside={() => {\n                if (bulkRoleDialog) {\n                  setBulkRoleDialog(false);\n                }\n              }}\n            >\n              {roles &&\n                roles.map(role => {\n                  return (\n                    <Dropdown.CheckboxItem\n                      key={role}\n                      checked={selectedBulkRole.includes(role)}\n                      onCheckedChange={value => {\n                        setBulkRole(selection => {\n                          return value\n                            ? [...selection, role]\n                            : selection.filter(\n                                selectedRole => selectedRole !== role\n                              );\n                        });\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      <Checkbox.Root\n                        css={{ margin: \"$2\" }}\n                        checked={selectedBulkRole.includes(role)}\n                      >\n                        <Checkbox.Indicator>\n                          <CheckIcon width={16} height={16} />\n                        </Checkbox.Indicator>\n                      </Checkbox.Root>\n                      {role}\n                    </Dropdown.CheckboxItem>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          <Text>To Role: </Text>\n          <Dropdown.Root\n            open={roleDialog}\n            onOpenChange={value => setRoleDialog(value)}\n          >\n            <DialogDropdownTrigger\n              ref={roleRef}\n              title={selectedRole || \"Select Role\"}\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={roleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: roleRef.current?.clientWidth, zIndex: 1000 }}\n            >\n              {roles &&\n                roles.map(role => {\n                  return (\n                    <Dropdown.Item\n                      key={role}\n                      onSelect={() => {\n                        setRole(role);\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      {role}\n                    </Dropdown.Item>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          {errorMessage && (\n            <Flex gap={2} css={{ c: \"$error\", w: \"70%\", ml: \"auto\" }}>\n              <AlertTriangleIcon />\n              <Text css={{ c: \"inherit\" }}>{errorMessage}</Text>\n            </Flex>\n          )}\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={changeBulkRole}\n            disabled={!(selectedRole && selectedBulkRole.length > 0)}\n          >\n            {isSubmiting && <Loading css={{ color: \"$textSecondary\" }} />}\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  selectLocalPeerName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Button, Dialog, Flex, Input, Text } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n\nexport const ChangeNameModal = ({ onOpenChange }) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW\n  );\n  const hmsActions = useHMSActions();\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const [currentName, setCurrentName] = useState(localPeerName);\n\n  const changeName = async () => {\n    const name = currentName.trim();\n    if (!name || name === localPeerName) {\n      return;\n    }\n    try {\n      await hmsActions.changeName(name);\n      setPreviewPreference({\n        ...(previewPreference || {}),\n        name,\n      });\n    } catch (error) {\n      console.error(\"failed to update name\", error);\n      ToastManager.addToast({ title: error.message });\n    } finally {\n      onOpenChange(false);\n    }\n  };\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n          <Dialog.Title css={{ p: \"0 $4\" }}>\n            <Text variant=\"h6\"> Change Name</Text>\n          </Dialog.Title>\n          <form\n            onSubmit={async e => {\n              e.preventDefault();\n              await changeName();\n            }}\n          >\n            <Flex justify=\"center\" align=\"center\" css={{ my: \"$8\", w: \"100%\" }}>\n              <Input\n                css={{ width: \"100%\" }}\n                value={currentName}\n                onChange={e => {\n                  setCurrentName(e.target.value);\n                }}\n                autoComplete=\"name\"\n                required\n                data-testid=\"change_name_field\"\n              />\n            </Flex>\n\n            <Flex\n              justify=\"between\"\n              align=\"center\"\n              css={{\n                width: \"100%\",\n                gap: \"$md\",\n                mt: \"$10\",\n              }}\n            >\n              <Box css={{ w: \"50%\" }}>\n                <Dialog.Close css={{ w: \"100%\" }}>\n                  <Button\n                    variant=\"standard\"\n                    css={{ w: \"100%\" }}\n                    outlined\n                    type=\"submit\"\n                    disabled={!localPeerName}\n                  >\n                    Cancel\n                  </Button>\n                </Dialog.Close>\n              </Box>\n              <Box css={{ w: \"50%\" }}>\n                <Button\n                  variant=\"primary\"\n                  css={{ width: \"100%\" }}\n                  type=\"submit\"\n                  disabled={\n                    !currentName.trim() || currentName.trim() === localPeerName\n                  }\n                  data-testid=\"popup_change_btn\"\n                >\n                  Change\n                </Button>\n              </Box>\n            </Flex>\n          </form>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ArrowRightIcon, CheckIcon, PersonIcon } from \"@100mslive/react-icons\";\nimport { config, Dropdown, Text } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useAppLayout } from \"../AppData/useAppLayout\";\nimport { useFilteredRoles } from \"../../common/hooks\";\nimport { arrayIntersection } from \"../../common/utils\";\n\nexport const ChangeSelfRole = ({ onClick }) => {\n  const roles = useFilteredRoles();\n  const permissions = useHMSStore(selectPermissions);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const hmsActions = useHMSActions();\n  const hideTriggerItem = useMedia(config.media.sm);\n  const selfRoleChangeTo = useAppLayout(\"selfRoleChangeTo\");\n  const availableSelfChangeRoles = useMemo(\n    () => arrayIntersection(selfRoleChangeTo, roles),\n    [roles, selfRoleChangeTo]\n  );\n\n  if (!permissions.changeRole) {\n    return null;\n  }\n  return hideTriggerItem ? (\n    <Dropdown.Item onClick={onClick}>\n      <PersonIcon />\n      <Text variant=\"sm\" css={{ mx: \"$4\" }}>\n        Change My Role\n      </Text>\n    </Dropdown.Item>\n  ) : (\n    <Dropdown.SubMenu>\n      <Dropdown.TriggerItem data-testid=\"change_my_role_btn\">\n        <PersonIcon />\n        <Text variant=\"sm\" css={{ flex: \"1 1 0\", mx: \"$4\" }}>\n          Change My Role\n        </Text>\n        <ArrowRightIcon />\n      </Dropdown.TriggerItem>\n      <Dropdown.SubMenuContent\n        sideOffset={8}\n        alignOffset={-5}\n        css={{ \"@md\": { w: \"$64\" } }}\n      >\n        {availableSelfChangeRoles.map((role, i) => (\n          <Dropdown.Item\n            key={role}\n            css={{ justifyContent: \"space-between\" }}\n            onClick={async () => {\n              try {\n                await hmsActions.changeRole(localPeerId, role, true);\n              } catch (error) {\n                ToastManager.addToast({ title: error.message });\n              }\n            }}\n            data-testid={\"change_to_role_\" + role}\n          >\n            <Text variant=\"sm\">{role}</Text>\n            {localPeerRole === role && <CheckIcon width={16} height={16} />}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.SubMenuContent>\n    </Dropdown.SubMenu>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ViewIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Dropdown, Text } from \"@100mslive/react-ui\";\nimport {\n  DialogContent,\n  DialogInput,\n  DialogRow,\n} from \"../../primitives/DialogContent\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const EmbedUrl = ({ setShowOpenUrl }) => {\n  if (!window.CropTarget) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        setShowOpenUrl(true);\n      }}\n      data-testid=\"embed_url_btn\"\n    >\n      <ViewIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        Embed URL\n      </Text>\n    </Dropdown.Item>\n  );\n};\n\nexport function EmbedUrlModal({ onOpenChange }) {\n  const [embedConfig, setEmbedConfig] = useSetAppDataByKey(\n    APP_DATA.embedConfig\n  );\n  const [url, setUrl] = useState(embedConfig?.url || \"\");\n\n  const isAnythingEmbedded = !!embedConfig?.url;\n  const isModifying = isAnythingEmbedded && url && url !== embedConfig.url;\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Embed URL\" Icon={ViewIcon}>\n        <DialogInput\n          title=\"URL\"\n          value={url}\n          onChange={setUrl}\n          placeholder=\"https://www.tldraw.com/\"\n          type=\"url\"\n        />\n        <DialogRow>\n          <Text>\n            Embed a url and share with everyone in the room. Ensure that you're\n            sharing the current tab when the prompt opens. Note that not all\n            websites support being embedded.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          {isAnythingEmbedded ? (\n            <>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!isModifying}\n                onClick={() => {\n                  setEmbedConfig({ url, shareScreen: embedConfig.shareScreen });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n                css={{ mr: \"$4\" }}\n              >\n                Update Embed\n              </Button>\n              <Button\n                variant=\"danger\"\n                type=\"submit\"\n                onClick={() => {\n                  setEmbedConfig({ url: \"\" });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n              >\n                Stop Embed\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!url.trim()}\n                onClick={() => {\n                  setEmbedConfig({ url });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n                css={{ mr: \"$4\" }}\n              >\n                Just Embed\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!url.trim()}\n                onClick={() => {\n                  setEmbedConfig({ url, shareScreen: true });\n                  onOpenChange(false);\n                }}\n                data-testid=\"embed_url_btn\"\n              >\n                Embed and Share\n              </Button>\n            </>\n          )}\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const useFullscreen = () => {\n  const [isFullScreenEnabled, setIsFullScreenEnabled] = useState(\n    screenfull.isFullscreen\n  );\n\n  const toggle = useCallback(async () => {\n    if (!screenfull.isEnabled) {\n      ToastManager.addToast({ title: \"Fullscreen feature not supported\" });\n      return;\n    }\n    try {\n      if (isFullScreenEnabled) {\n        await screenfull.exit();\n      } else {\n        await screenfull.request();\n      }\n    } catch (err) {\n      ToastManager.addToast({ title: err.message });\n    }\n  }, [isFullScreenEnabled]);\n\n  useEffect(() => {\n    const onChange = () => {\n      setIsFullScreenEnabled(screenfull.isFullscreen);\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", onChange);\n    }\n    return () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", onChange);\n      }\n    };\n  }, []);\n\n  return {\n    allowed: screenfull.isEnabled,\n    isFullscreen: isFullScreenEnabled,\n    toggleFullscreen: toggle,\n  };\n};\n","import React from \"react\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text } from \"@100mslive/react-ui\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { useFullscreen } from \"../hooks/useFullscreen\";\nimport { FEATURE_LIST } from \"../../common/constants\";\n\nexport const FullScreenItem = () => {\n  const { allowed, isFullscreen, toggleFullscreen } = useFullscreen();\n  const isFullscreenEnabled = useIsFeatureEnabled(FEATURE_LIST.FULLSCREEN);\n\n  if (!isFullscreenEnabled || !allowed) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        toggleFullscreen();\n      }}\n      data-testid=\"full_screen_btn\"\n    >\n      <ExpandIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        {isFullscreen ? \"Exit \" : \"Go \"}Fullscreen\n      </Text>\n    </Dropdown.Item>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { MicOffIcon } from \"@100mslive/react-icons\";\nimport {\n  Button,\n  Dialog,\n  Flex,\n  Label,\n  RadioGroup,\n  Text,\n} from \"@100mslive/react-ui\";\nimport {\n  DialogContent,\n  DialogRow,\n  DialogSelect,\n} from \"../../primitives/DialogContent\";\nimport { useFilteredRoles } from \"../../common/hooks\";\n\nconst trackSourceOptions = [\n  { label: \"All Track Sources\", value: \"\" },\n  { label: \"regular\", value: \"regular\" },\n  { label: \"screen\", value: \"screen\" },\n  { label: \"audioplaylist\", value: \"audioplaylist\" },\n  { label: \"videoplaylist\", value: \"videoplaylist\" },\n];\nconst trackTypeOptions = [\n  { label: \"All Track Types\", value: \"\" },\n  { label: \"audio\", value: \"audio\" },\n  { label: \"video\", value: \"video\" },\n];\nexport const MuteAllModal = ({ onOpenChange }) => {\n  const roles = useFilteredRoles();\n  const hmsActions = useHMSActions();\n  const [enabled, setEnabled] = useState(false);\n  const [trackType, setTrackType] = useState();\n  const [selectedRole, setRole] = useState();\n  const [selectedSource, setSource] = useState();\n\n  const muteAll = useCallback(async () => {\n    await hmsActions.setRemoteTracksEnabled({\n      enabled: enabled,\n      type: trackType,\n      source: selectedSource,\n      roles: selectedRole ? [selectedRole] : undefined,\n    });\n    onOpenChange(false);\n  }, [\n    selectedRole,\n    enabled,\n    trackType,\n    selectedSource,\n    hmsActions,\n    onOpenChange,\n  ]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Mute/Unmute Remote Tracks\" Icon={MicOffIcon}>\n        <DialogSelect\n          title=\"Role\"\n          options={[\n            { label: \"All Roles\", value: \"\" },\n            ...roles.map(role => ({ label: role, value: role })),\n          ]}\n          selected={selectedRole}\n          keyField=\"value\"\n          labelField=\"label\"\n          onChange={setRole}\n        />\n        <DialogSelect\n          title=\"Track type\"\n          options={trackTypeOptions}\n          selected={trackType}\n          onChange={setTrackType}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogSelect\n          title=\"Track source\"\n          options={trackSourceOptions}\n          selected={selectedSource}\n          onChange={setSource}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogRow>\n          <Text variant=\"md\">Track status</Text>\n          <RadioGroup.Root value={enabled} onValueChange={setEnabled}>\n            <Flex align=\"center\" css={{ mr: \"$8\" }}>\n              <RadioGroup.Item\n                value={false}\n                id=\"trackDisableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackDisableRadio\">Mute</Label>\n            </Flex>\n            <Flex align=\"center\" css={{ cursor: \"pointer\" }}>\n              <RadioGroup.Item\n                value={true}\n                id=\"trackEnableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackEnableRadio\">Request Unmute</Label>\n            </Flex>\n          </RadioGroup.Root>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button variant=\"primary\" onClick={muteAll}>\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport Hls from \"hls.js\";\nimport {\n  selectAppData,\n  selectIsAllowedToPublish,\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  ChangeRoleIcon,\n  CheckIcon,\n  InfoIcon,\n  MicOffIcon,\n  PencilIcon,\n  RecordIcon,\n  SettingsIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Checkbox,\n  config as cssConfig,\n  Dropdown,\n  Flex,\n  Text,\n  Tooltip,\n} from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport SettingsModal from \"../Settings/SettingsModal\";\nimport StartRecording from \"../Settings/StartRecording\";\nimport { StatsForNerds } from \"../StatsForNerds\";\nimport { BulkRoleChangeModal } from \"./BulkRoleChangeModal\";\nimport { ChangeNameModal } from \"./ChangeNameModal\";\nimport { ChangeSelfRole } from \"./ChangeSelfRole\";\nimport { EmbedUrl, EmbedUrlModal } from \"./EmbedUrl\";\nimport { FullScreenItem } from \"./FullScreenItem\";\nimport { MuteAllModal } from \"./MuteAllModal\";\nimport { useDropdownList } from \"../hooks/useDropdownList\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\nimport {\n  APP_DATA,\n  FEATURE_LIST,\n  isAndroid,\n  isIOS,\n  isMacOS,\n} from \"../../common/constants\";\n\nconst isMobileOS = isAndroid || isIOS;\n\nconst MODALS = {\n  CHANGE_NAME: \"changeName\",\n  SELF_ROLE_CHANGE: \"selfRoleChange\",\n  MORE_SETTINGS: \"moreSettings\",\n  START_RECORDING: \"startRecording\",\n  DEVICE_SETTINGS: \"deviceSettings\",\n  STATS_FOR_NERDS: \"statsForNerds\",\n  BULK_ROLE_CHANGE: \"bulkRoleChange\",\n  MUTE_ALL: \"muteAll\",\n  EMBED_URL: \"embedUrl\",\n};\n\nexport const MoreSettings = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const hmsActions = useHMSActions();\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const isMobile = useMedia(cssConfig.media.md);\n  const { isBrowserRecordingOn } = useRecordingStreaming();\n  const isChangeNameEnabled = useIsFeatureEnabled(FEATURE_LIST.CHANGE_NAME);\n  const isEmbedEnabled = useIsFeatureEnabled(FEATURE_LIST.EMBED_URL);\n  const isSFNEnabled = useIsFeatureEnabled(FEATURE_LIST.STARTS_FOR_NERDS);\n  const [openModals, setOpenModals] = useState(new Set());\n  useDropdownList({ open: openModals.size > 0, name: \"MoreSettings\" });\n\n  const updateState = (modalName, value) => {\n    setOpenModals(modals => {\n      const copy = new Set(modals);\n      if (value) {\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n\n  return (\n    <Fragment>\n      <Dropdown.Root\n        open={openModals.has(MODALS.MORE_SETTINGS)}\n        onOpenChange={value => updateState(MODALS.MORE_SETTINGS, value)}\n      >\n        <Dropdown.Trigger asChild data-testid=\"more_settings_btn\">\n          <IconButton>\n            <Tooltip title=\"More options\">\n              <Box>\n                <VerticalMenuIcon />\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{\n            maxHeight: \"$96\",\n            \"@md\": { w: \"$64\" },\n            \"div[role='separator']:first-child\": {\n              display: \"none\",\n            },\n          }}\n        >\n          {isMobile && permissions?.browserRecording ? (\n            <>\n              <Dropdown.Item\n                onClick={() => updateState(MODALS.START_RECORDING, true)}\n              >\n                <RecordIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  {isBrowserRecordingOn ? \"Stop\" : \"Start\"} Recording\n                </Text>\n              </Dropdown.Item>\n              <Dropdown.ItemSeparator />\n            </>\n          ) : null}\n          {isChangeNameEnabled && (\n            <Dropdown.Item\n              onClick={() => updateState(MODALS.CHANGE_NAME, true)}\n              data-testid=\"change_name_btn\"\n            >\n              <PencilIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Change Name\n              </Text>\n            </Dropdown.Item>\n          )}\n          <ChangeSelfRole\n            onClick={() => updateState(MODALS.SELF_ROLE_CHANGE, true)}\n          />\n          {permissions?.changeRole && (\n            <Dropdown.Item\n              onClick={() => updateState(MODALS.BULK_ROLE_CHANGE, true)}\n              data-testid=\"bulk_role_change_btn\"\n            >\n              <ChangeRoleIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Bulk Role Change\n              </Text>\n            </Dropdown.Item>\n          )}\n          <FullScreenItem />\n          {isAllowedToPublish.screen && isEmbedEnabled && (\n            <EmbedUrl\n              setShowOpenUrl={() => updateState(MODALS.EMBED_URL, true)}\n            />\n          )}\n          {permissions.mute && (\n            <Dropdown.Item\n              onClick={() => updateState(MODALS.MUTE_ALL, true)}\n              data-testid=\"mute_all_btn\"\n            >\n              <MicOffIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Mute All\n              </Text>\n            </Dropdown.Item>\n          )}\n          <Dropdown.ItemSeparator />\n          <Dropdown.Item\n            onClick={() => updateState(MODALS.DEVICE_SETTINGS, true)}\n            data-testid=\"device_settings_btn\"\n          >\n            <SettingsIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Settings\n            </Text>\n          </Dropdown.Item>\n          {FeatureFlags.enableStatsForNerds &&\n            isSFNEnabled &&\n            (localPeerRole === \"hls-viewer\" ? (\n              Hls.isSupported() ? (\n                <Dropdown.Item\n                  onClick={() =>\n                    hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                  }\n                  data-testid=\"hls_stats\"\n                >\n                  <Checkbox.Root\n                    css={{ margin: \"$2\" }}\n                    checked={enablHlsStats}\n                    onCheckedChange={() =>\n                      hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                    }\n                  >\n                    <Checkbox.Indicator>\n                      <CheckIcon width={16} height={16} />\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <Flex justify=\"between\" css={{ width: \"100%\" }}>\n                    <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                      Show HLS Stats\n                    </Text>\n                    {!isMobileOS ? (\n                      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                        {`${isMacOS ? \"⌘\" : \"ctrl\"} + ]`}\n                      </Text>\n                    ) : null}\n                  </Flex>\n                </Dropdown.Item>\n              ) : null\n            ) : (\n              <Dropdown.Item\n                onClick={() => updateState(MODALS.STATS_FOR_NERDS, true)}\n                data-testid=\"stats_for_nreds_btn\"\n              >\n                <InfoIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  Stats for Nerds\n                </Text>\n              </Dropdown.Item>\n            ))}\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {openModals.has(MODALS.BULK_ROLE_CHANGE) && (\n        <BulkRoleChangeModal\n          onOpenChange={value => updateState(MODALS.BULK_ROLE_CHANGE, value)}\n        />\n      )}\n      {openModals.has(MODALS.MUTE_ALL) && (\n        <MuteAllModal\n          onOpenChange={value => updateState(MODALS.MUTE_ALL, value)}\n        />\n      )}\n      {openModals.has(MODALS.CHANGE_NAME) && (\n        <ChangeNameModal\n          onOpenChange={value => updateState(MODALS.CHANGE_NAME, value)}\n        />\n      )}\n      {openModals.has(MODALS.DEVICE_SETTINGS) && (\n        <SettingsModal\n          open\n          onOpenChange={value => updateState(MODALS.DEVICE_SETTINGS, value)}\n        />\n      )}\n      {FeatureFlags.enableStatsForNerds &&\n        openModals.has(MODALS.STATS_FOR_NERDS) && (\n          <StatsForNerds\n            open\n            onOpenChange={value => updateState(MODALS.STATS_FOR_NERDS, value)}\n          />\n        )}\n      {openModals.has(MODALS.SELF_ROLE_CHANGE) && (\n        <RoleChangeModal\n          peerId={localPeerId}\n          onOpenChange={value => updateState(MODALS.SELF_ROLE_CHANGE, value)}\n        />\n      )}\n      {openModals.has(MODALS.START_RECORDING) && (\n        <StartRecording\n          open\n          onOpenChange={value => updateState(MODALS.START_RECORDING, value)}\n        />\n      )}\n      {openModals.has(MODALS.EMBED_URL) && (\n        <EmbedUrlModal\n          onOpenChange={value => updateState(MODALS.EMBED_URL, value)}\n        />\n      )}\n    </Fragment>\n  );\n};\n","let CANVAS_FILL_COLOR;\nlet CANVAS_STROKE_COLOR;\n\nfunction setPIPCanvasColors() {\n  if (!CANVAS_FILL_COLOR) {\n    CANVAS_FILL_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-surfaceLight\");\n  }\n  if (!CANVAS_STROKE_COLOR) {\n    CANVAS_STROKE_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-borderLight\");\n  }\n}\n\nexport function resetPIPCanvasColors() {\n  CANVAS_FILL_COLOR = \"\";\n  CANVAS_STROKE_COLOR = \"\";\n}\n/**\n * no tile - blank canvas, black image\n * 1 tile - takes full space on canvas\n * 2 tile - stack two video adjacent to each other\n * 3 tile - two rows first row has two tile second row has one tile centered.\n * 4 tiles - two rows two columns - all equal size\n * All videos will respect their aspect ratios.\n */\nexport function drawVideoElementsOnCanvas(videoElements, canvas) {\n  let videoTiles = videoElements.filter(\n    videoElement => videoElement.srcObject !== null\n  );\n\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (videoTiles.length === 0) {\n    // no tile to render, render black image\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    return;\n  }\n\n  fillGridTiles(videoTiles.slice(0, 4), ctx, canvas);\n}\n\n// this is to send some data for stream and resolve video element's play for a\n// video element rendering this canvas' capture stream\nexport function dummyChangeInCanvas(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * Imagine the canvas as a grid with passed in number of rows and columns. Go\n * over the tiles in the grid in order while drawing the videoElements upon them.\n */\nfunction fillGridTiles(videoElements, ctx, canvas) {\n  const offset = 8;\n  canvas.width = 480;\n  canvas.height = 320;\n\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Show borders only when there is atleast one video\n  if (videoElements.length > 0) {\n    ctx.strokeStyle = CANVAS_STROKE_COLOR;\n    ctx.lineWidth = offset / 2;\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n\n  if (videoElements.length === 1) {\n    const video = videoElements[0];\n    const { width, height } = getRenderDimensions(\n      video,\n      canvas.width - offset,\n      canvas.height - offset\n    );\n    /**\n     * The x and y offset are to center the video tile horizontally and vertically\n     * width and height are the aspect ratio constrained video tile dimensions\n     */\n    const xOffset = (canvas.width - width) / 2;\n    const yOffset = (canvas.height - height) / 2;\n    ctx.drawImage(video, xOffset, yOffset, width, height);\n  }\n\n  if (videoElements.length === 2) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset, // This will be the max available width for each tile\n        canvas.height - offset\n      );\n      /**\n       * (canvas.width / 2 - width) / 2 This is to center width wise within in the box\n       * (canvas.width / 2) * index This is the start offset\n       * for 1st element it is 0, for second it will be canvas.width/2 which starts from the center\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index;\n      /**\n       * (canvas.height - height) / 2 This is to center height wise\n       */\n      const yOffset = (canvas.height - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw a border between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n  }\n\n  if (videoElements.length === 3) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * for first two tiles, xOffset is similar to the 2 tiles calculation with only difference being the height. it is half now.\n       */\n      const xOffset =\n        index < 2\n          ? (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index\n          : canvas.width / 2 - width / 2;\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height / 2);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n  if (videoElements.length === 4) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * Similar to two tiles repeat after 2 tiles\n       * (canvas.width / 2 - width) / 2 is to center horizontally\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * (index % 2);\n      /**\n       * Similar to two tiles with the yOffset being height/2 for the 3rd and 4th tiles\n       * (canvas.height / 2 - height) / 2 is to center vertically\n       */\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n}\n\n/**\n * Restrict the dimensions within the available dimension with aspect ratio\n * constraint applied\n * @param {HTMLVideoElement} video\n * @param {number} width\n * @param {number} height\n * @returns { width: number, height: number }\n */\nfunction getRenderDimensions(video, width, height) {\n  let finalWidth = (video.videoWidth / video.videoHeight) * height;\n  let finalHeight = height;\n\n  if (finalWidth > width) {\n    finalWidth = width;\n    finalHeight = (video.videoHeight / video.videoWidth) * width;\n  }\n  return { width: finalWidth, height: finalHeight };\n}\n","import * as workerTimers from \"worker-timers\";\nimport {\n  drawVideoElementsOnCanvas,\n  dummyChangeInCanvas,\n  resetPIPCanvasColors,\n} from \"./pipUtils\";\nimport { isIOS, isMacOS, isSafari } from \"../../common/constants\";\nconst MAX_NUMBER_OF_TILES_IN_PIP = 4;\nconst DEFAULT_FPS = 30;\nconst DEFAULT_CANVAS_WIDTH = 480;\nconst DEFAULT_CANVAS_HEIGHT = 320;\nconst LEAVE_EVENT_NAME = \"leavepictureinpicture\";\n\nconst PIPStates = {\n  starting: \"starting\",\n  started: \"started\",\n  stopping: \"stopping\",\n  stopped: \"stopped\",\n};\n\n/**\n * video elements are stitched together as a canvas which is converted to\n * another video element converted to PIP.\n * The task is split into two parts -\n * 1. a function which gets hit when the input changes and updates the tracks\n * to show\n * 2. an independent loop which updates the canvas periodically based on the current\n * tracks which should be shown.\n */\nclass PipManager {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    console.debug(\"resetting PIP state\");\n    resetPIPCanvasColors();\n    this.canvas = null; // where stitching will take place\n    this.pipVideo = null; // the element which will be sent in PIP\n    this.timeoutRef = null; // setTimeout reference so it can be cancelled\n    this.hmsActions = null; // for attaching detaching\n    this.videoElements = []; // for attaching tracks\n    this.tracksToShow = [];\n    this.onStateChange = () => {}; // for user of this class to listen to changes\n    this.state = PIPStates.stopped;\n  }\n\n  /**\n   * check if PIP is supported in this browser env\n   */\n  isSupported() {\n    return (\n      !!document.pictureInPictureEnabled && !isIOS && !(isMacOS && isSafari)\n    );\n  }\n\n  /**\n   * check if pip is currently turned on\n   */\n  isOn() {\n    return !!document.pictureInPictureElement;\n  }\n\n  /**\n   * request browser to start pip and start the render loop updating the pip\n   * video element with peer tracks.\n   * @param hmsActions\n   * @param onStateChangeFn {function(bool):void} callback called to notify change in pip state\n   */\n  async start(hmsActions, onStateChangeFn) {\n    if (!this.isSupported()) {\n      throw new Error(\"pip is not supported on this browser\");\n    }\n    console.debug(\"starting PIP, current state\", this.state);\n    if (this.state === PIPStates.started) {\n      await this.stop(); // if anything is already running\n    } else if (this.state === PIPStates.starting) {\n      return; // ignore double clicks\n    }\n    this.state = PIPStates.starting;\n    try {\n      await this.init(hmsActions, onStateChangeFn);\n      // when user closes pip, call internal stop\n      this.pipVideo.addEventListener(LEAVE_EVENT_NAME, this.stop);\n      this.renderLoop();\n      if (!this.isOn()) {\n        await this.requestPIP();\n      }\n      console.debug(\"pip started\");\n      this.state = PIPStates.started;\n      this.onStateChange(true);\n    } catch (err) {\n      console.error(\"error in request pip\", err);\n      this.state = PIPStates.stopped;\n    }\n  }\n\n  stop = async () => {\n    if (this.state === PIPStates.stopped) {\n      return;\n    }\n    this.state = PIPStates.stopping;\n    this.pipVideo?.removeEventListener(LEAVE_EVENT_NAME, this.stop);\n    if (this.timeoutRef) {\n      workerTimers.clearTimeout(this.timeoutRef);\n    }\n    if (this.isOn()) {\n      this.exitPIP();\n    }\n    // detach all to avoid bandwidth consumption\n    await this.detachOldAttachNewTracks(this.tracksToShow, []);\n    this.onStateChange(false); // notify parent about this\n    this.reset(); // cleanup\n    this.state = PIPStates.stopped;\n  };\n\n  /**\n   * @param peers {Array} All Remote Peers present in call.\n   * @param tracksMap {Object} map of track id to track\n   * */\n  async updatePeersAndTracks(peers, tracksMap) {\n    if (!this.canvas) {\n      return;\n    }\n    const newTracksToShowUnordered = this.pickTracksToShow(peers, tracksMap);\n    const currentTracksShowing = this.tracksToShow;\n    this.tracksToShow = this.orderNewTracksToShow(\n      newTracksToShowUnordered,\n      currentTracksShowing\n    );\n    try {\n      await this.detachOldAttachNewTracks(\n        currentTracksShowing,\n        this.tracksToShow,\n        tracksMap\n      );\n    } catch (error) {\n      console.error(\"error in detaching/attaching tracks\", error);\n    }\n  }\n\n  // ------- Private function --------------\n\n  /**\n   * @private\n   */\n  async init(hmsActions, onStateChangeFn) {\n    await this.initMediaElements();\n    this.hmsActions = hmsActions;\n    this.onStateChange = onStateChangeFn;\n  }\n\n  async initMediaElements() {\n    if (!this.canvas) {\n      const { canvas, pipVideo } = this.initializeCanvasAndVideoElement();\n      this.canvas = canvas; // where stitching will take place\n      this.pipVideo = pipVideo; // the element which will be sent in PIP\n      this.videoElements = this.initializeVideoElements(); // for attaching tracks\n      const videoPlayPromise = this.pipVideo.play();\n      dummyChangeInCanvas(this.canvas);\n      await videoPlayPromise;\n    }\n  }\n\n  initializeCanvasAndVideoElement() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = DEFAULT_CANVAS_WIDTH;\n    canvas.height = DEFAULT_CANVAS_HEIGHT;\n    const pipVideo = document.createElement(\"video\");\n    pipVideo.width = DEFAULT_CANVAS_WIDTH;\n    pipVideo.height = DEFAULT_CANVAS_HEIGHT;\n    pipVideo.muted = true;\n    pipVideo.srcObject = canvas.captureStream();\n    return { canvas, pipVideo };\n  }\n\n  initializeVideoElements() {\n    let videoElements = [];\n    for (let i = 0; i < MAX_NUMBER_OF_TILES_IN_PIP; i++) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.autoplay = true;\n      videoElement.playsinline = true;\n      videoElements.push(videoElement);\n    }\n    return videoElements;\n  }\n\n  /**\n   * render loop is responsible for rendering the video elements on canvas/pip.\n   * in each loop current video elements are stitched and painted on canvas\n   */\n  renderLoop() {\n    const delay = 1000 / DEFAULT_FPS;\n    this.timeoutRef = workerTimers.setTimeout(() => {\n      if (\n        this.state === PIPStates.stopping ||\n        this.state === PIPStates.stopped\n      ) {\n        return;\n      }\n      if (this.state === PIPStates.started) {\n        drawVideoElementsOnCanvas(this.videoElements, this.canvas);\n      }\n      this.renderLoop();\n    }, delay);\n  }\n\n  async requestPIP() {\n    try {\n      if (this.isOn()) {\n        this.exitPIP(); // is this really needed?\n      }\n      await this.pipVideo.requestPictureInPicture();\n    } catch (error) {\n      console.error(\"error in requestpip\", error, \"state\", this.state);\n      throw error;\n    }\n  }\n\n  exitPIP() {\n    document.exitPictureInPicture();\n  }\n\n  /**\n   * Logic - pick only enabled video tracks\n   * @param peers {Array<any>}\n   * @param tracksMap {Record<string, any>}\n   */\n  pickTracksToShow(peers, tracksMap) {\n    const tracksToShow = [];\n    for (const peer of peers) {\n      if (tracksToShow.length === MAX_NUMBER_OF_TILES_IN_PIP) {\n        break;\n      } else if (peer.videoTrack && tracksMap[peer.videoTrack]?.enabled) {\n        tracksToShow.push(peer.videoTrack);\n      }\n    }\n    return tracksToShow;\n  }\n\n  /**\n   * there has to be a smart reordering of new tracks based on currently showing\n   * ones to reduce unnecessary displacement. If someone was showing up both\n   * earlier and now, it's a better UX to keep their position same instead\n   * of letting it change.\n   * The returned array is a shuffled version of newTracks with position of\n   * tracks present in the old tracks intact.\n   * eg. old = [1,5,9,3], new = [3,8,2,9], result = [8,2,9,3]\n   * @param oldTracks {Array}\n   * @param newTracks {Array}\n   * @return {Array}\n   */\n  orderNewTracksToShow(newTracks, oldTracks) {\n    const betterNewTracks = [];\n    const leftOvers = [];\n    // put the common ones in right position\n    newTracks.forEach(track => {\n      const oldPosition = oldTracks.indexOf(track);\n      if (oldPosition !== -1 && oldPosition < newTracks.length) {\n        // if track is there currently and we can put it on the same position\n        betterNewTracks[oldPosition] = track;\n      } else {\n        leftOvers.push(track);\n      }\n    });\n    // put the left overs in remaining empty positions\n    for (let i = 0; i < newTracks.length; i++) {\n      if (!betterNewTracks[i]) {\n        betterNewTracks[i] = leftOvers.shift();\n      }\n    }\n    return betterNewTracks;\n  }\n\n  /**\n   * call detach for tracks which no longer need to be shown and attach for\n   * new ones which are to be shown now.\n   * Note: oldTracks and newTracks are not necessarily of same length\n   * @param oldTracks {Array<String>}\n   * @param newTracks {Array<String>}\n   * @param tracksMap {Record<String, any>}\n   */\n  async detachOldAttachNewTracks(oldTracks, newTracks, tracksMap = null) {\n    const numTracks = Math.max(oldTracks.length, newTracks.length);\n    for (let i = 0; i < numTracks; i++) {\n      if (oldTracks[i] === newTracks[i]) {\n        continue; // it would already have been attached previously\n      } else if (oldTracks[i]) {\n        // old track is there but not equal to new track, detach\n        // no need to call detach if we know for sure track is no longer in store\n        if (!tracksMap || tracksMap[oldTracks[i]]) {\n          await this.hmsActions.detachVideo(\n            oldTracks[i],\n            this.videoElements[i]\n          );\n        }\n        if (this.videoElements[i]) {\n          // even if old track got removed from the room, element needs to be cleaned up\n          this.videoElements[i].srcObject = null;\n        }\n      }\n      if (newTracks[i]) {\n        await this.hmsActions.attachVideo(newTracks[i], this.videoElements[i]);\n      }\n    }\n  }\n}\n\nexport const PictureInPicture = new PipManager();\n// PictureInPicture.initMediaElements().catch(console.error);  // for safari, init early\n","import {\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n} from \"@100mslive/react-sdk\";\n\n/**\n * Media Session API allows for handling control actions on top of pip\n * https://web.dev/media-session/#video-conferencing-actions\n */\nclass SetupMediaSession {\n  setup = (actions, store) => {\n    this.actions = actions;\n    this.store = store;\n    this.initState();\n    this.setUpHandlers();\n  };\n\n  initState = () => {\n    const isMicActive = this.store.getState(selectIsLocalAudioEnabled);\n    const isCamActive = this.store.getState(selectIsLocalVideoEnabled);\n    navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    navigator.mediaSession?.setCameraActive?.(isCamActive);\n\n    this.store.subscribe(isMicActive => {\n      navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    }, selectIsLocalAudioEnabled);\n\n    this.store.subscribe(isCamActive => {\n      navigator.mediaSession?.setCameraActive?.(isCamActive);\n    }, selectIsLocalVideoEnabled);\n  };\n\n  toggleMic = async () => {\n    console.log(\"toggle mic clicked in pip\");\n    const current = this.store.getState(selectIsLocalAudioEnabled);\n    await this.actions.setLocalAudioEnabled(!current);\n  };\n\n  toggleCam = async () => {\n    console.log(\"toggle cam clicked in pip\");\n    const current = this.store.getState(selectIsLocalVideoEnabled);\n    await this.actions.setLocalVideoEnabled(!current);\n  };\n\n  leave = () => {\n    console.log(\"leave called from pip\");\n    this.actions.leave();\n  };\n\n  setUpHandlers = () => {\n    if (navigator.mediaSession) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          \"togglemicrophone\",\n          this.toggleMic\n        );\n        navigator.mediaSession.setActionHandler(\"togglecamera\", this.toggleCam);\n        navigator.mediaSession.setActionHandler(\"hangup\", this.leave);\n      } catch (err) {\n        console.error(\"error in setting media session handlers\", err);\n      }\n    }\n  };\n}\n\nexport const MediaSession = new SetupMediaSession();\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  selectLocalPeerRoleName,\n  selectPeers,\n  selectRemotePeers,\n  selectTracksMap,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { PipIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport { PictureInPicture } from \"./PIPManager\";\nimport { MediaSession } from \"./SetupMediaSession\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { DEFAULT_HLS_VIEWER_ROLE, FEATURE_LIST } from \"../../common/constants\";\n\n/**\n * shows a button which when clicked shows some videos in PIP, clicking\n * again turns it off.\n */\nconst PIPComponent = ({ peers, showLocalPeer }) => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const [isPipOn, setIsPipOn] = useState(PictureInPicture.isOn());\n  const hmsActions = useHMSActions();\n  const store = useHMSVanillaStore();\n  const isFeatureEnabled = useIsFeatureEnabled(FEATURE_LIST.PICTURE_IN_PICTURE);\n\n  const onPipToggle = useCallback(() => {\n    if (isPipOn) {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip\", err)\n      );\n    } else {\n      PictureInPicture.start(hmsActions, setIsPipOn).catch(err =>\n        console.error(\"error in starting pip\", err)\n      );\n      MediaSession.setup(hmsActions, store);\n    }\n  }, [hmsActions, isPipOn, store]);\n\n  // stop pip on unmount\n  useEffect(() => {\n    return () => {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip on unmount\", err)\n      );\n    };\n  }, []);\n\n  if (\n    !PictureInPicture.isSupported() ||\n    localPeerRole === DEFAULT_HLS_VIEWER_ROLE ||\n    !isFeatureEnabled\n  ) {\n    return null;\n  }\n  return (\n    <>\n      <Tooltip\n        title={`${isPipOn ? \"Deactivate\" : \"Activate\"} picture in picture view`}\n      >\n        <IconButton\n          active={!isPipOn}\n          key=\"pip\"\n          onClick={() => onPipToggle()}\n          data-testid=\"pip_btn\"\n        >\n          <PipIcon />\n        </IconButton>\n      </Tooltip>\n      {isPipOn && <ActivatedPIP showLocalPeer={showLocalPeer} peers={peers} />}\n    </>\n  );\n};\n\n/**\n * this is a separate component so it can be conditionally rendered and\n * the subscriptions to store are done only if required.\n */\nconst ActivatedPIP = ({ showLocalPeer, peers }) => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const storePeers = useHMSStore(\n    showLocalPeer ? selectPeers : selectRemotePeers\n  );\n\n  useEffect(() => {\n    let pipPeers = storePeers;\n    if (peers) {\n      pipPeers = storePeers.filter(peer => peers.includes(peer.id));\n    }\n    PictureInPicture.updatePeersAndTracks(pipPeers, tracksMap).catch(err => {\n      console.error(\"error in updating pip\", err);\n    });\n  }, [peers, storePeers, tracksMap]);\n\n  return null;\n};\n\nexport default PIPComponent;\n","import PIPComponent from \"./PIPComponent\";\nimport { usePinnedTrack } from \"../AppData/useUISettings\";\n\nexport const PIP = () => {\n  const pinnedTrack = usePinnedTrack();\n\n  return (\n    <PIPComponent\n      peers={\n        pinnedTrack && pinnedTrack.enabled ? [pinnedTrack.peerId] : undefined\n      }\n      showLocalPeer={true}\n    />\n  );\n};\n","import {\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../IconButton\";\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { isScreenshareSupported } from \"../common/utils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const ScreenshareToggle = ({ css }) => {\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isVideoScreenshare = amIScreenSharing && !!video;\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n  return (\n    <Tooltip title={`${!isVideoScreenshare ? \"Start\" : \"Stop\"} screen sharing`}>\n      <IconButton\n        active={!isVideoScreenshare}\n        css={css}\n        disabled={isAudioOnly}\n        onClick={() => {\n          toggleScreenShare();\n        }}\n        data-testid=\"screen_share_btn\"\n      >\n        <ShareScreenIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { Button, Dialog } from \"@100mslive/react-ui\";\nimport { DialogContent, DialogRow } from \"../primitives/DialogContent\";\n\nexport const ScreenShareHintModal = ({ onClose }) => {\n  const hmsActions = useHMSActions();\n  return (\n    <Dialog.Root defaultOpen onOpenChange={value => !value && onClose()}>\n      <DialogContent title=\"AudioOnly Screenshare\">\n        <img src=\"/share-audio.png\" alt=\"AudioOnly Screenshare instructions\" />\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              hmsActions\n                .setScreenShareEnabled(true, {\n                  audioOnly: true,\n                  displaySurface: \"browser\",\n                })\n                .catch(console.error);\n              onClose();\n            }}\n            data-testid=\"audio_screenshare_continue\"\n          >\n            Continue\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import {\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon, ChatUnreadIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { FEATURE_LIST, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ChatToggle = () => {\n  const countUnreadMessages = useHMSStore(selectUnreadHMSMessagesCount);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const isFeatureEnabled = useIsFeatureEnabled(FEATURE_LIST.CHAT);\n\n  if (!isFeatureEnabled) {\n    return;\n  }\n\n  return (\n    <Tooltip key=\"chat\" title={`${isChatOpen ? \"Close\" : \"Open\"} chat`}>\n      <IconButton\n        onClick={toggleChat}\n        active={!isChatOpen}\n        data-testid=\"chat_btn\"\n      >\n        {countUnreadMessages === 0 ? (\n          <ChatIcon />\n        ) : (\n          <ChatUnreadIcon data-testid=\"chat_unread_btn\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","/**\n * Please refer the following docs for more detals.\n * https://www.100ms.live/docs/javascript/v2/how--to-guides/extend-capabilities/plugins/noise-suppression\n */\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  selectIsLocalAudioPluginPresent,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AudioLevelIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport IconButton from \"../IconButton\";\nimport { useIsFeatureEnabled } from \"../components/hooks/useFeatures\";\nimport { FeatureFlags } from \"../services/FeatureFlags\";\nimport { FEATURE_LIST } from \"../common/constants\";\n\nexport const NoiseSuppression = () => {\n  const pluginRef = useRef(null);\n  const hmsActions = useHMSActions();\n  const [disable, setDisabled] = useState(false);\n  const [isNSSupported, setIsNSSupported] = useState(false);\n  const isPluginPresent = useHMSStore(\n    selectIsLocalAudioPluginPresent(\"@100mslive/hms-noise-suppression\")\n  );\n  const isFeatureEnabled = useIsFeatureEnabled(FEATURE_LIST.AUDIO_PLUGINS);\n  const { selectedDeviceIDs } = useDevices();\n  const pluginActive = isPluginPresent && !disable;\n\n  const createPlugin = useCallback(async () => {\n    if (!pluginRef.current) {\n      const { HMSNoiseSuppressionPlugin } = await import(\n        \"@100mslive/hms-noise-suppression\"\n      );\n      pluginRef.current = new HMSNoiseSuppressionPlugin(\n        process.env.NS_DURATION_TIME_IN_MS\n      );\n    }\n  }, []);\n\n  const removePlugin = useCallback(async () => {\n    if (pluginRef.current) {\n      await hmsActions.removePluginFromAudioTrack(pluginRef.current);\n      pluginRef.current = null;\n    }\n  }, [hmsActions]);\n\n  const handleFailure = useCallback(\n    async err => {\n      let message = \"adding Noise Suppression plugin failed, see docs\";\n      if (err.message) {\n        message = err.message;\n      }\n      ToastManager.addToast({\n        title: message,\n      });\n\n      setDisabled(true);\n      await removePlugin();\n      pluginRef.current = null;\n      console.error(err);\n    },\n    [removePlugin]\n  );\n\n  const addPlugin = useCallback(async () => {\n    try {\n      setDisabled(false);\n      await createPlugin();\n      //check support its recommended\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      if (pluginSupport.isSupported) {\n        await hmsActions.addPluginToAudioTrack(pluginRef.current);\n      } else {\n        const err = pluginSupport.errMsg;\n        await handleFailure(err);\n      }\n    } catch (err) {\n      await handleFailure(err);\n    }\n  }, [hmsActions, handleFailure, createPlugin]);\n\n  useEffect(() => {\n    (async () => {\n      if (!pluginRef.current) {\n        await createPlugin();\n      }\n\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      setIsNSSupported(pluginSupport.isSupported);\n      setDisabled(!pluginSupport.isSupported);\n    })();\n  }, [selectedDeviceIDs.audioInput, hmsActions, createPlugin]);\n\n  if (isNSSupported && FeatureFlags.showNS() && isFeatureEnabled) {\n    return (\n      <Tooltip title={`Turn ${pluginActive ? \"off\" : \"on\"} noise suppression`}>\n        <IconButton\n          active={!pluginActive}\n          disabled={disable}\n          onClick={async () => {\n            if (pluginActive) {\n              await removePlugin();\n            } else {\n              await addPlugin();\n            }\n          }}\n          data-testid=\"noise_suppression_btn\"\n        >\n          <AudioLevelIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n\n  return null;\n};\n","import React, { Fragment, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSPlaylistType,\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { MusicIcon } from \"@100mslive/react-icons\";\nimport {\n  config as cssConfig,\n  Flex,\n  Footer as AppFooter,\n  Tooltip,\n} from \"@100mslive/react-ui\";\nimport { Playlist } from \"../../components/Playlist/Playlist\";\nimport IconButton from \"../../IconButton\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport MetaActions from \"../MetaActions\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { PIP } from \"../PIP\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport { ScreenShareHintModal } from \"../ScreenshareHintModal\";\nimport { ChatToggle } from \"./ChatToggle\";\nimport { NoiseSuppression } from \"../../plugins/NoiseSuppression\";\nimport { VirtualBackground } from \"../../plugins/VirtualBackground/VirtualBackground\";\nimport { ToggleWhiteboard } from \"../../plugins/whiteboard\";\nimport { useIsFeatureEnabled } from \"../hooks/useFeatures\";\nimport { isScreenshareSupported } from \"../../common/utils\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\nimport { FEATURE_LIST } from \"../../common/constants\";\n\nconst TranscriptionButton = React.lazy(() =>\n  import(\"../../plugins/transcription\")\n);\n\nconst ScreenshareAudio = () => {\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    screenShareAudioTrackId: audio,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioScreenshare = amIScreenSharing && !video && !!audio;\n  const [showModal, setShowModal] = useState(false);\n  const isFeatureEnabled = useIsFeatureEnabled(\n    FEATURE_LIST.AUDIO_ONLY_SCREENSHARE\n  );\n  if (\n    !isFeatureEnabled ||\n    !isAllowedToPublish.screen ||\n    !isScreenshareSupported()\n  ) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <Tooltip\n        title={`${!isAudioScreenshare ? \"Start\" : \"Stop\"} audio sharing`}\n        key=\"shareAudio\"\n      >\n        <IconButton\n          active={!isAudioScreenshare}\n          onClick={() => {\n            if (amIScreenSharing) {\n              toggleScreenShare();\n            } else {\n              setShowModal(true);\n            }\n          }}\n          data-testid=\"screenshare_audio\"\n        >\n          <MusicIcon />\n        </IconButton>\n      </Tooltip>\n      {showModal && (\n        <ScreenShareHintModal onClose={() => setShowModal(false)} />\n      )}\n    </Fragment>\n  );\n};\n\nexport const ConferencingFooter = () => {\n  const isMobile = useMedia(cssConfig.media.md);\n  return (\n    <AppFooter.Root>\n      <AppFooter.Left>\n        <ScreenshareAudio />\n        <Playlist type={HMSPlaylistType.audio} />\n        <Playlist type={HMSPlaylistType.video} />\n        {FeatureFlags.enableWhiteboard ? <ToggleWhiteboard /> : null}\n        <VirtualBackground />\n        <NoiseSuppression />\n        {FeatureFlags.enableTranscription ? <TranscriptionButton /> : null}\n        <Flex\n          align=\"center\"\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n              gap: \"$8\",\n            },\n          }}\n        >\n          {isMobile && <EmojiReaction />}\n          <MetaActions isMobile />\n        </Flex>\n      </AppFooter.Left>\n      <AppFooter.Center>\n        <AudioVideoToggle />\n        <ScreenshareToggle />\n        <PIP />\n        <MoreSettings />\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n        <LeaveRoom />\n      </AppFooter.Center>\n      <AppFooter.Right>\n        {!isMobile && <EmojiReaction />}\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { Box, Flex, Footer as AppFooter } from \"@100mslive/react-ui\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport { StreamActions } from \"../Header/StreamActions\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport MetaActions from \"../MetaActions\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { PIP } from \"../PIP\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport { ChatToggle } from \"./ChatToggle\";\n\nexport const StreamingFooter = () => {\n  return (\n    <AppFooter.Root\n      css={{\n        flexWrap: \"nowrap\",\n        \"@md\": {\n          justifyContent: \"center\",\n        },\n      }}\n    >\n      <AppFooter.Left\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            p: \"0\",\n          },\n        }}\n      >\n        <AudioVideoToggle />\n      </AppFooter.Left>\n      <AppFooter.Center\n        css={{\n          \"@md\": {\n            w: \"unset\",\n          },\n        }}\n      >\n        <ScreenshareToggle css={{ \"@sm\": { display: \"none\" } }} />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <PIP />\n        </Box>\n        <Box\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n              alignItems: \"center\",\n              mx: \"$4\",\n            },\n          }}\n        >\n          <StreamActions />\n        </Box>\n        <MoreSettings />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <LeaveRoom />\n        </Box>\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <EmojiReaction />\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { ConferencingFooter } from \"./Footer/ConferencingFooter\";\nimport { StreamingFooter } from \"./Footer/StreamingFooter\";\nimport { isStreamingKit } from \"../common/utils\";\n\nexport const Footer = () => {\n  return isStreamingKit() ? <StreamingFooter /> : <ConferencingFooter />;\n};\n","import React from \"react\";\nimport {\n  selectRoleChangeRequest,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { RequestDialog } from \"../primitives/DialogContent\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nexport const RoleChangeRequestModal = () => {\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const roleChangeRequest = useHMSStore(selectRoleChangeRequest);\n\n  if (!roleChangeRequest?.role || isHeadless) {\n    return null;\n  }\n\n  return (\n    <RequestDialog\n      title=\"Role Change Request\"\n      onOpenChange={value =>\n        !value && hmsActions.rejectChangeRole(roleChangeRequest)\n      }\n      body={`${roleChangeRequest?.requestedBy?.name} has requested you to change your role to ${roleChangeRequest?.role?.name}.`}\n      onAction={() => {\n        hmsActions.acceptChangeRole(roleChangeRequest);\n      }}\n      actionText=\"Accept\"\n    />\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePrevious } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectAppData,\n  selectIsConnectedToRoom,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"@100mslive/react-ui\";\nimport { ConferenceMainView } from \"../layouts/mainView\";\nimport { Footer } from \"./Footer\";\nimport FullPageProgress from \"./FullPageProgress\";\nimport { Header } from \"./Header\";\nimport { RoleChangeRequestModal } from \"./RoleChangeRequestModal\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\nimport { useNavigation } from \"./hooks/useNavigation\";\nimport {\n  APP_DATA,\n  EMOJI_REACTION_TYPE,\n  isAndroid,\n  isIOS,\n  isIPadOS,\n} from \"../common/constants\";\n\nconst Conference = () => {\n  const navigate = useNavigation();\n  const { roomId, role } = useParams();\n  const isHeadless = useIsHeadless();\n  const roomState = useHMSStore(selectRoomState);\n  const prevState = usePrevious(roomState);\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n  const [hideControls, setHideControls] = useState(false);\n  const dropdownList = useHMSStore(selectAppData(APP_DATA.dropdownList));\n  const headerRef = useRef();\n  const footerRef = useRef();\n  const dropdownListRef = useRef();\n  const performAutoHide = hideControls && (isAndroid || isIOS || isIPadOS);\n\n  const toggleControls = e => {\n    if (dropdownListRef.current?.length === 0) {\n      setHideControls(value => !value);\n    }\n  };\n\n  useEffect(() => {\n    let timeout = null;\n    dropdownListRef.current = dropdownList || [];\n    if (dropdownListRef.current.length === 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        if (dropdownListRef.current.length === 0) {\n          setHideControls(true);\n        }\n      }, 5000);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [dropdownList, hideControls]);\n\n  useEffect(() => {\n    if (!roomId) {\n      navigate(`/`);\n      return;\n    }\n    if (\n      !prevState &&\n      !(\n        roomState === HMSRoomState.Connecting ||\n        roomState === HMSRoomState.Reconnecting ||\n        isConnectedToRoom\n      )\n    ) {\n      if (role) navigate(`/preview/${roomId || \"\"}/${role}`);\n      else navigate(`/preview/${roomId || \"\"}`);\n    }\n  }, [isConnectedToRoom, prevState, roomState, navigate, role, roomId]);\n\n  useEffect(() => {\n    // beam doesn't need to store messages, saves on unnecessary store updates in large calls\n    if (isHeadless) {\n      hmsActions.ignoreMessageTypes([\"chat\", EMOJI_REACTION_TYPE]);\n    }\n  }, [isHeadless, hmsActions]);\n\n  if (!isConnectedToRoom) {\n    return <FullPageProgress />;\n  }\n\n  return (\n    <Flex css={{ size: \"100%\", overflow: \"hidden\" }} direction=\"column\">\n      {!isHeadless && (\n        <Box\n          ref={headerRef}\n          css={{\n            h: \"$18\",\n            transition: \"margin 0.3s ease-in-out\",\n            marginTop: performAutoHide\n              ? `-${headerRef.current?.clientHeight}px`\n              : \"none\",\n            \"@md\": {\n              h: \"$17\",\n            },\n          }}\n          data-testid=\"header\"\n        >\n          <Header />\n        </Box>\n      )}\n      <Box\n        css={{\n          w: \"100%\",\n          flex: \"1 1 0\",\n          minHeight: 0,\n          paddingBottom: \"env(safe-area-inset-bottom)\",\n        }}\n        id=\"conferencing\"\n        data-testid=\"conferencing\"\n        onClick={toggleControls}\n      >\n        <ConferenceMainView />\n      </Box>\n      {!isHeadless && (\n        <Box\n          ref={footerRef}\n          css={{\n            flexShrink: 0,\n            maxHeight: \"$24\",\n            transition: \"margin 0.3s ease-in-out\",\n            marginBottom: performAutoHide\n              ? `-${footerRef.current?.clientHeight}px`\n              : undefined,\n            \"@md\": {\n              maxHeight: \"unset\",\n            },\n          }}\n          data-testid=\"footer\"\n        >\n          <Footer />\n        </Box>\n      )}\n      <RoleChangeRequestModal />\n    </Flex>\n  );\n};\n\nexport default Conference;\n","import { styled } from \"@100mslive/react-ui\";\n\nexport const Image = styled(\"img\", {\n  width: \"100%\",\n  height: \"auto\",\n  r: \"$3\",\n});\n","import React, { Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, config as cssConfig, Flex } from \"@100mslive/react-ui\";\nimport { FirstPersonDisplay } from \"./FirstPersonDisplay\";\nimport { Image } from \"./Image\";\nimport VideoList from \"./VideoList\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nconst MAX_TILES_FOR_MOBILE = 4;\n\n/**\n * the below variables are for showing webinar etc. related image if required on certain meeting urls\n */\nconst webinarProps = JSON.parse(process.env.REACT_APP_WEBINAR_PROPS || \"{}\");\nconst eventRoomIDs = webinarProps?.ROOM_IDS || [];\nconst eventsImg = webinarProps?.IMAGE_FILE || \"\"; // the image to show in center\n// the link to navigate to when user clicks on the image\nconst webinarInfoLink = webinarProps?.LINK_HREF || \"https://100ms.live/\";\n\n// The center of the screen shows bigger tiles\nexport const GridCenterView = ({ peers, maxTileCount }) => {\n  const mediaQueryLg = cssConfig.media.md;\n  const limitMaxTiles = useMedia(mediaQueryLg);\n  const headlessConfig = useAppConfig(\"headlessConfig\");\n  const isHeadless = useIsHeadless();\n  return (\n    <Fragment>\n      <Box\n        css={{\n          flex: \"1 1 0\",\n          height: \"100%\",\n          mx:\n            isHeadless && Number(headlessConfig?.tileOffset) === 0 ? \"0\" : \"$8\",\n          \"@md\": { flex: \"2 1 0\" },\n        }}\n      >\n        {peers && peers.length > 0 ? (\n          <VideoList\n            peers={peers}\n            maxTileCount={limitMaxTiles ? MAX_TILES_FOR_MOBILE : maxTileCount}\n          />\n        ) : eventRoomIDs.some(id => window.location.href.includes(id)) ? (\n          <Box\n            css={{\n              display: \"grid\",\n              placeItems: \"center\",\n              size: \"100%\",\n              p: \"$12\",\n            }}\n          >\n            <a href={webinarInfoLink} target=\"_blank\" rel=\"noreferrer\">\n              <Image\n                css={{ p: \"$4\", boxShadow: \"$sm\" }}\n                alt=\"Event template\"\n                src={eventsImg}\n              />\n            </a>\n          </Box>\n        ) : (\n          <FirstPersonDisplay />\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\n// Side pane shows smaller tiles\nexport const GridSidePaneView = ({ peers }) => {\n  const headlessConfig = useAppConfig(\"headlessConfig\");\n  const isHeadless = useIsHeadless();\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        flex: \"0 0 20%\",\n        mx: isHeadless && Number(headlessConfig?.tileOffset) === 0 ? \"0\" : \"$8\",\n        \"@lg\": {\n          flex: \"0 0 25%\",\n        },\n        \"@md\": {\n          flex: \"1 1 0\",\n        },\n      }}\n    >\n      <Flex css={{ flex: \"1 1 0\" }} align=\"end\">\n        {peers && peers.length > 0 && (\n          <VideoList peers={peers} maxColCount={2} />\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n","const PEER_NAME_PLACEHOLDER = \"peerName\";\nconst labelMap = new Map([\n  [[true, \"screen\"].toString(), \"Your Screen\"],\n  [[true, \"regular\"].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, \"screen\"].toString(), `${PEER_NAME_PLACEHOLDER}'s Screen`],\n  [[false, \"regular\"].toString(), PEER_NAME_PLACEHOLDER],\n  [[true, undefined].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, undefined].toString(), `${PEER_NAME_PLACEHOLDER}`],\n]);\n\nexport const getVideoTileLabel = ({ peerName, isLocal, track }) => {\n  const isPeerPresent = peerName !== undefined;\n  if (!isPeerPresent || !track) {\n    // for peers with only audio track\n    return isPeerPresent\n      ? labelMap\n          .get([isLocal, undefined].toString())\n          .replace(PEER_NAME_PLACEHOLDER, peerName)\n      : \"\";\n  }\n  const isLocallyMuted = track.volume === 0;\n  // Map [isLocal, videoSource] to the label to be displayed.\n  let label = labelMap.get([isLocal, track.source].toString());\n  if (label) {\n    label = label.replace(PEER_NAME_PLACEHOLDER, peerName);\n  } else {\n    label = `${peerName} ${track.source}`;\n  }\n  label = `${label}${track.degraded ? \"(Degraded)\" : \"\"}`;\n  return `${label}${isLocallyMuted ? \" (Muted for you)\" : \"\"}`;\n};\n","import React, { useRef } from \"react\";\nimport { useFullscreen, useToggle } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectVideoPlaylist,\n  selectVideoPlaylistAudioTrackByPeerID,\n  selectVideoPlaylistVideoTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { CrossIcon, ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Text,\n  Video,\n  VideoTileStats,\n} from \"@100mslive/react-ui\";\nimport { VideoPlaylistControls } from \"./PlaylistControls\";\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport const VideoPlayer = React.memo(({ peerId }) => {\n  const videoTrack = useHMSStore(selectVideoPlaylistVideoTrackByPeerID(peerId));\n  const audioTrack = useHMSStore(selectVideoPlaylistAudioTrackByPeerID(peerId));\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const [show, toggle] = useToggle(false);\n  const isFullscreen = useFullscreen(ref, show, {\n    onClose: () => toggle(false),\n  });\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"center\"\n      css={{ w: \"100%\", h: \"100%\" }}\n      ref={ref}\n    >\n      {active && (\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            bg: \"$menuBg\",\n            p: \"$2 $2 $2 $6\",\n            borderTopLeftRadius: \"$1\",\n            borderTopRightRadius: \"$1\",\n          }}\n        >\n          <Text css={{ color: \"$textPrimary\" }}>{active.name}</Text>\n          <IconButton\n            css={{\n              color: \"$white\",\n            }}\n            onClick={() => {\n              hmsActions.videoPlaylist.stop();\n            }}\n            data-testid=\"videoplaylist_cross_btn\"\n          >\n            <CrossIcon />\n          </IconButton>\n        </Flex>\n      )}\n      {showStatsOnTiles ? (\n        <Box css={{ \"& > div\": { top: \"$14\", left: \"$8\" } }}>\n          <VideoTileStats\n            audioTrackID={audioTrack?.id}\n            videoTrackID={videoTrack?.id}\n            peerID={peerId}\n            isLocal={active}\n          />\n        </Box>\n      ) : null}\n      <Video\n        trackId={videoTrack?.id}\n        attach={!isAudioOnly}\n        css={{\n          objectFit: \"contain\",\n          h: \"auto\",\n          r: \"$1\",\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        }}\n      />\n      <VideoPlaylistControls>\n        {screenfull.enabled && (\n          <IconButton\n            onClick={() => toggle()}\n            css={{\n              color: \"$white\",\n              height: \"max-content\",\n              alignSelf: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n          </IconButton>\n        )}\n      </VideoPlaylistControls>\n    </Flex>\n  );\n});\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CrossIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"@100mslive/react-ui\";\n\nexport const ScreenshareDisplay = () => {\n  const hmsActions = useHMSActions();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        color: \"$textPrimary\",\n        bg: \"$surfaceDefault\",\n        textAlign: \"center\",\n      }}\n    >\n      <ShareScreenIcon width={48} height={48} />\n      <Text variant=\"h5\" css={{ m: \"$8 0\" }}>\n        You are sharing your screen\n      </Text>\n      <Button\n        variant=\"danger\"\n        onClick={async () => {\n          await hmsActions.setScreenShareEnabled(false);\n        }}\n        data-testid=\"stop_screen_share_btn\"\n      >\n        <CrossIcon width={18} height={18} />\n        &nbsp; Stop screen share\n      </Button>\n    </Flex>\n  );\n};\n","import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPeers,\n  selectPeerScreenSharing,\n  selectPeerSharingVideoPlaylist,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, config as cssConfig, Flex } from \"@100mslive/react-ui\";\nimport { VideoPlayer } from \"../components/Playlist/VideoPlayer\";\nimport { ScreenshareDisplay } from \"../components/ScreenshareDisplay\";\nimport ScreenshareTile from \"../components/ScreenshareTile\";\nimport VideoList from \"../components/VideoList\";\nimport VideoTile from \"../components/VideoTile\";\n\nconst ScreenShareView = () => {\n  // for smaller screen we will show sidebar in bottom\n  const mediaQueryLg = cssConfig.media.xl;\n  const showSidebarInBottom = useMedia(mediaQueryLg);\n  const peers = useHMSStore(selectPeers);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const peerPresenting = useHMSStore(selectPeerScreenSharing);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const isPresenterFromMyRole =\n    peerPresenting?.roleName?.toLowerCase() === localPeerRole?.toLowerCase();\n  const amIPresenting = localPeerID === peerPresenting?.id;\n  const showPresenterInSmallTile =\n    showSidebarInBottom || amIPresenting || isPresenterFromMyRole;\n\n  const smallTilePeers = useMemo(() => {\n    const smallTilePeers = peers.filter(peer => peer.id !== peerPresenting?.id);\n    if (showPresenterInSmallTile && peerPresenting) {\n      smallTilePeers.unshift(peerPresenting); // put presenter on first page\n    }\n    return smallTilePeers;\n  }, [peers, peerPresenting, showPresenterInSmallTile]);\n\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={showSidebarInBottom ? \"column\" : \"row\"}\n    >\n      <ScreenShareComponent\n        amIPresenting={amIPresenting}\n        peerPresenting={peerPresenting}\n        peerSharingPlaylist={peerSharingPlaylist}\n      />\n      <Flex\n        direction={{ \"@initial\": \"column\", \"@lg\": \"row\" }}\n        css={{\n          overflow: \"hidden\",\n          p: \"$4 $8\",\n          flex: \"0 0 20%\",\n          \"@xl\": {\n            flex: \"1 1 0\",\n          },\n        }}\n      >\n        <SidePane\n          showSidebarInBottom={showSidebarInBottom}\n          peerScreenSharing={peerPresenting}\n          isPresenterInSmallTiles={showPresenterInSmallTile}\n          smallTilePeers={smallTilePeers}\n          totalPeers={peers.length}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\n// Sidepane will show the camera stream of the main peer who is screensharing\n// and both camera + screen(if applicable) of others\nexport const SidePane = ({\n  isPresenterInSmallTiles,\n  peerScreenSharing, // the peer who is screensharing\n  smallTilePeers,\n  totalPeers,\n  showSidebarInBottom,\n}) => {\n  // The main peer's screenshare is already being shown in center view\n  const shouldShowScreenFn = useCallback(\n    peer => peerScreenSharing && peer.id !== peerScreenSharing.id,\n    [peerScreenSharing]\n  );\n  return (\n    <Fragment>\n      {!isPresenterInSmallTiles && (\n        <LargeTilePeerView peerScreenSharing={peerScreenSharing} />\n      )}\n      <SmallTilePeersView\n        showSidebarInBottom={showSidebarInBottom}\n        smallTilePeers={smallTilePeers}\n        shouldShowScreenFn={shouldShowScreenFn}\n      />\n    </Fragment>\n  );\n};\n\nconst ScreenShareComponent = ({\n  amIPresenting,\n  peerPresenting,\n  peerSharingPlaylist,\n}) => {\n  const screenshareTrack = useHMSStore(\n    selectScreenShareByPeerID(peerPresenting?.id)\n  );\n\n  if (peerSharingPlaylist) {\n    return (\n      <Box\n        css={{\n          mx: \"$8\",\n          flex: \"3 1 0\",\n          \"@xl\": {\n            flex: \"2 1 0\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n      >\n        <VideoPlayer peerId={peerSharingPlaylist.id} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      css={{\n        flex: \"3 1 0\",\n        mx: \"$8\",\n        \"@xl\": { ml: \"$4\", maxHeight: \"80%\", minHeight: 0 },\n      }}\n    >\n      {peerPresenting &&\n        (amIPresenting &&\n        ![\"browser\", \"window\", \"application\"].includes(\n          screenshareTrack?.displaySurface\n        ) ? (\n          <Box css={{ objectFit: \"contain\", h: \"100%\" }}>\n            <ScreenshareDisplay />\n          </Box>\n        ) : (\n          <ScreenshareTile peerId={peerPresenting?.id} />\n        ))}\n    </Box>\n  );\n};\n\nconst SmallTilePeersView = ({\n  smallTilePeers,\n  shouldShowScreenFn,\n  showStatsOnTiles,\n  showSidebarInBottom,\n}) => {\n  return (\n    <Flex\n      css={{\n        flex: \"2 1 0\",\n      }}\n    >\n      {smallTilePeers && smallTilePeers.length > 0 && (\n        <VideoList\n          peers={smallTilePeers}\n          maxColCount={showSidebarInBottom ? undefined : 2}\n          maxRowCount={showSidebarInBottom ? 1 : undefined}\n          includeScreenShareForPeer={shouldShowScreenFn}\n        />\n      )}\n    </Flex>\n  );\n};\n\nconst LargeTilePeerView = ({ peerScreenSharing, showStatsOnTiles }) => {\n  return peerScreenSharing ? (\n    <Box\n      css={{\n        flex: \"1 1 0\",\n        minHeight: \"25%\",\n        py: \"$4\",\n        \"@lg\": {\n          mr: \"$4\",\n          minHeight: \"unset\",\n          py: 0,\n        },\n        \"@sm\": {\n          height: \"100%\",\n          maxHeight: \"75%\",\n          alignSelf: \"center\",\n        },\n      }}\n    >\n      <VideoTile\n        showStatsOnTiles={showStatsOnTiles}\n        width=\"100%\"\n        height=\"100%\"\n        peerId={peerScreenSharing.id}\n      />\n    </Box>\n  ) : null;\n};\n\nexport default ScreenShareView;\n"],"names":["useAppConfig","path","usePlaylist","type","isAudioPlaylist","selector","active","selection","playlist","hmsActions","playlistAction","stringifyWithNull","obj","k","v","PusherCommunicationProvider","roomId","eventName","message","arg","cb","_a","provider","WhiteboardEvents","useWhiteboardState","amIWhiteboardOwner","useWhiteboardMetadata","useMultiplayerState","app","setApp","isReady","setIsReady","shouldRequestState","rLiveShapes","rLiveBindings","getCurrentState","sendCurrentState","updateLocalState","shapes","bindings","merge","lShapes","lBindings","id","shape","binding","applyStateToBoard","state","handleChanges","setupInitialState","onMount","onChangePage","_app","_assets","unsubs","stillAlive","setupDocument","unsub","Whiteboard","events","ToggleWhiteboard","whiteboardEnabled","whiteboardActive","toggleWhiteboard","hlsViewerRole","localPeerRole","isFeatureEnabled","Tooltip","IconButton","PencilDrawIcon","FirstPersonDisplay","Box","Flex","Text","Progress","duration","selectPlaylist","progress","e","PlaylistActive","onToggle","Controls","css","hasNext","hasPrevious","actions","VolumeControl","volume","peerSharingPlaylist","audioTrack","audioTrackVolume","sliderVolume","value","AudioPlaylistControls","VideoPlaylistControls","children","labelStyles","Tile","peerId","width","height","isLocal","track","peer","isAudioOnly","isHeadless","isMouseHovered","setIsMouseHovered","showStatsOnTiles","label","fullscreenRef","fullscreen","setFullscreen","isFullscreen","isFullScreenSupported","isSameTile","trackId","videoTrackID","audioTrackID","SpotlightActions","spotlightTrackId","isTileSpotlighted","setSpotlightTrackId","err","PinActions","pinnedTrackId","setPinnedTrackId","isTilePinned","showSpotlight","TileMenu","peerID","isScreenshare","open","setOpen","removeOthers","isAudioEnabled","isVideoEnabled","setVolume","toggleAudio","toggleVideo","sendEvent","isPrimaryVideoTrack","isInset","showPinAction","hideSimulcastLayers","SimulcastLayers","bg","currentLayer","layer","Pagination","page","setPage","numPages","disableLeft","disableRight","nextPage","prevPage","StyledPagination","ChevronLeftIcon","_","i","ChevronRightIcon","List","maxTileCount","peers","maxColCount","maxRowCount","includeScreenShareForPeer","aspectRatio","tileOffset","hideLocalVideo","useUISettings","localPeerId","filterPeerId","ref","pagesWithTiles","useVideoList","getOffset","StyledVideoList","tiles","pageNo","tile","ScreenshareTile","VideoTile","VideoList","oldPeers","foundPeerToFilterOut","visible","objectFit","rootCSS","containerCSS","trackSelector","peerName","localPeerID","mirrorLocalVideo","isAudioMuted","isVideoMuted","borderAudioRef","isVideoDegraded","onHoverHandler","event","headlessConfig","hideLabel","isTileBigEnoughToShowStats","avatarSize","getPadding","showAudioMuted","PeerMetadata","metaStyles","metaData","isHandRaised","isBRB","hideTileAudioMute","hideAudioLevel","EmbedView","showStats","EmbedComponent","amIScreenSharing","toggleScreenShare","useScreenShare","embedConfig","setEmbedConfig","wasScreenShared","setWasScreenShared","screenShareAttemptInProgress","src","iframeRef","resetEmbedConfig","getAspectRatio","roleMap","roleName","isMobile","role","InsetView","remotePeers","localPeer","useMedia","isLandscape","rolePreference","centerPeers","sidepanePeers","center","hideInset","arr","InsetTile","sidepane","nodeRef","node","resizeObserver","entries","entry","NonPublisherView","ShieldAlertIcon","useAppLayout","MainGridView","centerRoles","sidepaneRoles","roles","sidebarPeers","localRole","peersByRoles","placeholder","setPlaceholder","hasPublishingPeers","hasSubscribedRolePublishing","showSidePane","itsOnlyMeInTheRoom","nooneIsPublishing","WaitingView","ColoredTimeIcon","WhiteboardView","HLSView","ActiveSpeakerView","PinnedTrackView","ConferenceMainView","pinnedTrack","peerSharing","peerSharingAudio","whiteboardShared","isConnected","uiMode","headlessUIMode","uiViewMode","waitingViewerRole","urlToIframe","audioPlaylist","videoPlaylist","ViewComponent","FullPageProgress","SidePane","formatDuration","mins","secs","PlaylistItem","name","metadata","selected","onClick","Dropdown","BrowseAndPlayFromLocal","file","Playlist","collapse","setCollapse","isAllowedToPublish","AudioPlayerIcon","VideoPlayerIcon","CrossIcon","playlistItem","onOpenChange","permissions","recordingUrl","resolution","setResolution","recordingStarted","setRecordingState","isBrowserRecordingOn","isStreamingOn","isHLSRunning","useRecordingStreaming","Dialog","AlertTriangleIcon","Button","error","ToastManager","ResolutionInput","StatsForNerds","tracksWithLabels","useTracksWithLabel","statsOptions","selectedStat","setSelectedStat","setShowStatsOnTiles","selectionBg","useDropdownSelection","Switch","Label","option","isSelected","LocalPeerStats","TrackStats","tracksMap","peersMap","res","isLocalTrack","stats","StatsRow","formatBytes","trackID","local","inbound","bytes","unit","decimals","dm","sizes","size","BulkRoleChangeModal","roleRef","selectedBulkRole","setBulkRole","selectedRole","setRole","bulkRoleDialog","setBulkRoleDialog","roleDialog","setRoleDialog","errorMessage","setErrorMessage","isSubmiting","setIsSubmiting","changeBulkRole","DialogContent","ChangeRoleIcon","Checkbox","CheckIcon","Loading","ChangeNameModal","previewPreference","setPreviewPreference","useUserPreferences","localPeerName","currentName","setCurrentName","changeName","Input","ChangeSelfRole","hideTriggerItem","selfRoleChangeTo","availableSelfChangeRoles","PersonIcon","ArrowRightIcon","EmbedUrl","setShowOpenUrl","ViewIcon","EmbedUrlModal","url","setUrl","isAnythingEmbedded","isModifying","useFullscreen","isFullScreenEnabled","setIsFullScreenEnabled","toggle","onChange","FullScreenItem","allowed","toggleFullscreen","ExpandIcon","trackSourceOptions","trackTypeOptions","MuteAllModal","enabled","setEnabled","trackType","setTrackType","selectedSource","setSource","muteAll","MicOffIcon","RadioGroup","isMobileOS","MODALS","MoreSettings","enablHlsStats","isChangeNameEnabled","isEmbedEnabled","isSFNEnabled","openModals","setOpenModals","useDropdownList","updateState","modalName","modals","copy","VerticalMenuIcon","RecordIcon","PencilIcon","SettingsIcon","FeatureFlags","InfoIcon","SettingsModal","RoleChangeModal","CANVAS_FILL_COLOR","CANVAS_STROKE_COLOR","setPIPCanvasColors","resetPIPCanvasColors","drawVideoElementsOnCanvas","videoElements","canvas","videoTiles","videoElement","ctx","fillGridTiles","dummyChangeInCanvas","video","getRenderDimensions","xOffset","yOffset","index","finalWidth","finalHeight","MAX_NUMBER_OF_TILES_IN_PIP","DEFAULT_FPS","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","LEAVE_EVENT_NAME","PIPStates","PipManager","onStateChangeFn","newTracksToShowUnordered","currentTracksShowing","pipVideo","videoPlayPromise","delay","tracksToShow","newTracks","oldTracks","betterNewTracks","leftOvers","oldPosition","numTracks","PictureInPicture","SetupMediaSession","store","isMicActive","isCamActive","_b","current","MediaSession","PIPComponent","showLocalPeer","isPipOn","setIsPipOn","onPipToggle","PipIcon","ActivatedPIP","storePeers","pipPeers","PIP","ScreenshareToggle","isVideoScreenshare","ShareScreenIcon","ScreenShareHintModal","onClose","ChatToggle","countUnreadMessages","isChatOpen","toggleChat","useSidepane","ChatIcon","ChatUnreadIcon","NoiseSuppression","pluginRef","disable","setDisabled","isNSSupported","setIsNSSupported","isPluginPresent","selectedDeviceIDs","useDevices","pluginActive","createPlugin","HMSNoiseSuppressionPlugin","removePlugin","handleFailure","addPlugin","pluginSupport","AudioLevelIcon","TranscriptionButton","ScreenshareAudio","audio","isAudioScreenshare","showModal","setShowModal","MusicIcon","ConferencingFooter","VirtualBackground","EmojiReaction","MetaActions","AudioVideoToggle","LeaveRoom","StreamingFooter","StreamActions","RoleChangeRequestModal","roleChangeRequest","navigate","useNavigation","roomState","prevState","usePrevious","isConnectedToRoom","hideControls","setHideControls","dropdownList","headerRef","footerRef","dropdownListRef","performAutoHide","toggleControls","timeout","Header","Image","MAX_TILES_FOR_MOBILE","webinarProps","eventRoomIDs","eventsImg","webinarInfoLink","GridCenterView","mediaQueryLg","limitMaxTiles","GridSidePaneView","PEER_NAME_PLACEHOLDER","labelMap","getVideoTileLabel","isPeerPresent","isLocallyMuted","VideoPlayer","videoTrack","show","useToggle","Video","ShrinkIcon","ScreenshareDisplay","ScreenShareView","showSidebarInBottom","peerPresenting","isPresenterFromMyRole","amIPresenting","showPresenterInSmallTile","smallTilePeers","ScreenShareComponent","isPresenterInSmallTiles","peerScreenSharing","totalPeers","shouldShowScreenFn","LargeTilePeerView","SmallTilePeersView","screenshareTrack"],"sourceRoot":""}